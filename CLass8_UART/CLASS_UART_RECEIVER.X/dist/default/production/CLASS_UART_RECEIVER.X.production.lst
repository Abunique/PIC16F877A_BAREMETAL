

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Feb 10 11:16:44 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0018                     _RCSTA	set	24
   167     0008                     _PORTD	set	8
   168     001A                     _RCREG	set	26
   169     000C                     _PIR1	set	12
   170     0099                     _SPBRG	set	153
   171     0098                     _TXSTA	set	152
   172     0087                     _TRISC	set	135
   173     0088                     _TRISD	set	136
   174                           
   175                           	psect	cinit
   176     07FB                     start_initialization:	
   177                           ; #config settings
   178                           
   179     07FB                     __initialization:
   180                           
   181                           ; Clear objects allocated to COMMON
   182     07FB  01F2               	clrf	__pbssCOMMON& (0+127)
   183     07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     07FC                     __end_of__initialization:
   187     07FC  0183               	clrf	3
   188     07FD  120A  118A  2FC9   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	bssCOMMON
   191     0072                     __pbssCOMMON:
   192     0072                     _val:
   193     0072                     	ds	1
   194                           
   195                           	psect	cstackCOMMON
   196     0070                     __pcstackCOMMON:
   197     0070                     ?_receiver_init:
   198     0070                     ??_receiver_init:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0070                     ?_main:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ??_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207                           
   208                           ; 1 bytes @ 0x0
   209     0070                     	ds	2
   210                           
   211                           	psect	maintext
   212     07C9                     __pmaintext:	
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 27 in file "CLASS_UART_RECEIVER.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;		None
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : B00/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   232 ;;      Params:         0       0       0       0       0
   233 ;;      Locals:         0       0       0       0       0
   234 ;;      Temps:          2       0       0       0       0
   235 ;;      Totals:         2       0       0       0       0
   236 ;;Total ram usage:        2 bytes
   237 ;; Hardware stack levels required when called: 1
   238 ;; This function calls:
   239 ;;		_receiver_init
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245     07C9                     _main:	
   246                           ;psect for function _main
   247                           
   248     07C9                     l592:	
   249                           ;incstack = 0
   250                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   251                           
   252                           
   253                           ;CLASS_UART_RECEIVER.c: 28:     receiver_init();
   254     07C9  120A  118A  27B4  120A  118A  	fcall	_receiver_init
   255     07CE                     l594:
   256                           
   257                           ;CLASS_UART_RECEIVER.c: 30:         if (PIR1 & 0x20)
   258     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   259     07CF  1303               	bcf	3,6	;RP1=0, select bank0
   260     07D0  1E8C               	btfss	12,5	;volatile
   261     07D1  2FD3               	goto	u11
   262     07D2  2FD4               	goto	u10
   263     07D3                     u11:
   264     07D3  2FCE               	goto	l594
   265     07D4                     u10:
   266     07D4                     l596:
   267                           
   268                           ;CLASS_UART_RECEIVER.c: 31:         {;CLASS_UART_RECEIVER.c: 32:             val = RCREG
      +                          ;
   269     07D4  081A               	movf	26,w	;volatile
   270     07D5  00F2               	movwf	_val
   271                           
   272                           ;CLASS_UART_RECEIVER.c: 33:             switch (val) {
   273     07D6  2FE2               	goto	l608
   274     07D7                     l598:
   275                           
   276                           ;CLASS_UART_RECEIVER.c: 35:                     PORTD = 0x02;
   277     07D7  3002               	movlw	2
   278     07D8  0088               	movwf	8	;volatile
   279                           
   280                           ;CLASS_UART_RECEIVER.c: 36:                     break;
   281     07D9  2FCE               	goto	l594
   282     07DA                     l600:
   283                           
   284                           ;CLASS_UART_RECEIVER.c: 38:                     PORTD = 0x10;
   285     07DA  3010               	movlw	16
   286     07DB  0088               	movwf	8	;volatile
   287                           
   288                           ;CLASS_UART_RECEIVER.c: 39:                     break;
   289     07DC  2FCE               	goto	l594
   290     07DD                     l602:
   291                           
   292                           ;CLASS_UART_RECEIVER.c: 41:                     PORTD = 0x12;
   293     07DD  3012               	movlw	18
   294     07DE  0088               	movwf	8	;volatile
   295                           
   296                           ;CLASS_UART_RECEIVER.c: 42:                     break;
   297     07DF  2FCE               	goto	l594
   298     07E0                     l604:
   299                           
   300                           ;CLASS_UART_RECEIVER.c: 44:                     PORTD = 0x00;
   301     07E0  0188               	clrf	8	;volatile
   302                           
   303                           ;CLASS_UART_RECEIVER.c: 45:                     break;
   304     07E1  2FCE               	goto	l594
   305     07E2                     l608:
   306     07E2  0872               	movf	_val,w
   307     07E3  00F0               	movwf	??_main
   308     07E4  01F1               	clrf	??_main+1
   309                           
   310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   311                           ; Switch size 1, requested type "simple"
   312                           ; Number of cases is 1, Range of values is 0 to 0
   313                           ; switch strategies available:
   314                           ; Name         Instructions Cycles
   315                           ; simple_byte            4     3 (average)
   316                           ; direct_byte           11     8 (fixed)
   317                           ; jumptable            260     6 (fixed)
   318                           ;	Chosen strategy is simple_byte
   319     07E5  0871               	movf	??_main+1,w
   320     07E6  3A00               	xorlw	0	; case 0
   321     07E7  1903               	skipnz
   322     07E8  2FEA               	goto	l634
   323     07E9  2FCE               	goto	l594
   324     07EA                     l634:
   325                           
   326                           ; Switch size 1, requested type "simple"
   327                           ; Number of cases is 4, Range of values is 65 to 68
   328                           ; switch strategies available:
   329                           ; Name         Instructions Cycles
   330                           ; simple_byte           13     7 (average)
   331                           ; direct_byte           23    11 (fixed)
   332                           ; jumptable            263     9 (fixed)
   333                           ;	Chosen strategy is simple_byte
   334     07EA  0870               	movf	??_main,w
   335     07EB  3A41               	xorlw	65	; case 65
   336     07EC  1903               	skipnz
   337     07ED  2FD7               	goto	l598
   338     07EE  3A03               	xorlw	3	; case 66
   339     07EF  1903               	skipnz
   340     07F0  2FDA               	goto	l600
   341     07F1  3A01               	xorlw	1	; case 67
   342     07F2  1903               	skipnz
   343     07F3  2FDD               	goto	l602
   344     07F4  3A07               	xorlw	7	; case 68
   345     07F5  1903               	skipnz
   346     07F6  2FE0               	goto	l604
   347     07F7  2FCE               	goto	l594
   348     07F8  120A  118A  2800   	ljmp	start
   349     07FB                     __end_of_main:
   350                           
   351                           	psect	text1
   352     07B4                     __ptext1:	
   353 ;; *************** function _receiver_init *****************
   354 ;; Defined at:
   355 ;;		line 53 in file "CLASS_UART_RECEIVER.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, status,2
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   369 ;;      Params:         0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0
   372 ;;      Totals:         0       0       0       0       0
   373 ;;Total ram usage:        0 bytes
   374 ;; Hardware stack levels used: 1
   375 ;; This function calls:
   376 ;;		Nothing
   377 ;; This function is called by:
   378 ;;		_main
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382     07B4                     _receiver_init:	
   383                           ;psect for function _receiver_init
   384                           
   385     07B4                     l582:	
   386                           ;incstack = 0
   387                           ; Regs used in _receiver_init: [wreg+status,2]
   388                           
   389                           
   390                           ;CLASS_UART_RECEIVER.c: 54:     TRISD =0x00;
   391     07B4  1683               	bsf	3,5	;RP0=1, select bank1
   392     07B5  1303               	bcf	3,6	;RP1=0, select bank1
   393     07B6  0188               	clrf	8	;volatile
   394                           
   395                           ;CLASS_UART_RECEIVER.c: 55:     PORTD = 0x00;
   396     07B7  1283               	bcf	3,5	;RP0=0, select bank0
   397     07B8  1303               	bcf	3,6	;RP1=0, select bank0
   398     07B9  0188               	clrf	8	;volatile
   399     07BA                     l584:
   400                           
   401                           ;CLASS_UART_RECEIVER.c: 56:     TRISC= 0xC0;
   402     07BA  30C0               	movlw	192
   403     07BB  1683               	bsf	3,5	;RP0=1, select bank1
   404     07BC  1303               	bcf	3,6	;RP1=0, select bank1
   405     07BD  0087               	movwf	7	;volatile
   406     07BE                     l586:
   407                           
   408                           ;CLASS_UART_RECEIVER.c: 57:     RCSTA = 0x90;
   409     07BE  3090               	movlw	144
   410     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   411     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   412     07C1  0098               	movwf	24	;volatile
   413     07C2                     l588:
   414                           
   415                           ;CLASS_UART_RECEIVER.c: 59:     TXSTA = 0x20;
   416     07C2  3020               	movlw	32
   417     07C3  1683               	bsf	3,5	;RP0=1, select bank1
   418     07C4  1303               	bcf	3,6	;RP1=0, select bank1
   419     07C5  0098               	movwf	24	;volatile
   420     07C6                     l590:
   421                           
   422                           ;CLASS_UART_RECEIVER.c: 60:     SPBRG = 0x09;
   423     07C6  3009               	movlw	9
   424     07C7  0099               	movwf	25	;volatile
   425     07C8                     l38:
   426     07C8  0008               	return
   427     07C9                     __end_of_receiver_init:
   428     007E                     btemp	set	126	;btemp
   429     007E                     wtemp0	set	126
   430                           
   431                           	psect	config
   432                           
   433                           ;Config register CONFIG @ 0x2007
   434                           ;	Oscillator Selection bits
   435                           ;	FOSC = EXTRC, RC oscillator
   436                           ;	Watchdog Timer Enable bit
   437                           ;	WDTE = OFF, WDT disabled
   438                           ;	Power-up Timer Enable bit
   439                           ;	PWRTE = OFF, PWRT disabled
   440                           ;	Brown-out Reset Enable bit
   441                           ;	BOREN = OFF, BOR disabled
   442                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   443                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   444                           ;	Data EEPROM Memory Code Protection bit
   445                           ;	CPD = OFF, Data EEPROM code protection off
   446                           ;	Flash Program Memory Write Enable bits
   447                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   448                           ;	In-Circuit Debugger Mode bit
   449                           ;	DEBUG = 0x1, unprogrammed default
   450                           ;	Flash Program Memory Code Protection bit
   451                           ;	CP = OFF, Code protection off
   452     2007                     	org	8199
   453     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
                      _receiver_init
 ---------------------------------------------------------------------------------
 (1) _receiver_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _receiver_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Feb 10 11:16:44 2024

                     l38 07C8                       u10 07D4                       u11 07D3  
                    l600 07DA                      l602 07DD                      l604 07E0  
                    l608 07E2                      l634 07EA                      l590 07C6  
                    l582 07B4                      l584 07BA                      l592 07C9  
                    l586 07BE                      l594 07CE                      l588 07C2  
                    l596 07D4                      l598 07D7                      _val 0072  
                   _PIR1 000C                     _main 07C9                     btemp 007E  
                   start 0000                    ?_main 0070                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088                    _TXSTA 0098  
                  status 0003                    wtemp0 007E          __initialization 07FB  
           __end_of_main 07FB                   ??_main 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 07C9                  __ptext1 07B4  
   end_of_initialization 07FC            _receiver_init 07B4           ?_receiver_init 0070  
    start_initialization 07FB              __pbssCOMMON 0072                ___latbits 0002  
        ??_receiver_init 0070    __end_of_receiver_init 07C9  
