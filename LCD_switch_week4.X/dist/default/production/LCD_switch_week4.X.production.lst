

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Jan 02 22:00:10 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 22/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179     052B                     __pidataBANK0:
   180                           
   181                           ;initializer for _array
   182     052B  3453               	retlw	83
   183     052C  3445               	retlw	69
   184     052D  3454               	retlw	84
   185     052E  3420               	retlw	32
   186     052F  3453               	retlw	83
   187     0530  3450               	retlw	80
   188     0531  3444               	retlw	68
   189     0532  343A               	retlw	58
   190     0533  3420               	retlw	32
   191     0534  3420               	retlw	32
   192     0535  3420               	retlw	32
   193     0536  3420               	retlw	32
   194     0537  3452               	retlw	82
   195     0538  3450               	retlw	80
   196     0539  344D               	retlw	77
   197     053A  3400               	retlw	0
   198     053B  3400               	retlw	0
   199     053C  3400               	retlw	0
   200     053D  3400               	retlw	0
   201     053E  3400               	retlw	0
   202     053F  3400               	retlw	0
   203     0540  3400               	retlw	0
   204     0541  3400               	retlw	0
   205     0542  3400               	retlw	0
   206     0543  3400               	retlw	0
   207     0544  3400               	retlw	0
   208     0545  3400               	retlw	0
   209     0546  3400               	retlw	0
   210     0547  3400               	retlw	0
   211     0548  3400               	retlw	0
   212     0008                     _PORTD	set	8
   213     0007                     _PORTC	set	7
   214     0006                     _PORTB	set	6
   215     0088                     _TRISD	set	136
   216     0087                     _TRISC	set	135
   217     0086                     _TRISB	set	134
   218                           
   219                           	psect	cinit
   220     07E0                     start_initialization:	
   221                           ; #config settings
   222                           
   223     07E0                     __initialization:
   224                           
   225                           ; Initialize objects allocated to BANK0
   226     07E0  1383               	bcf	3,7	;select IRP bank0
   227     07E1  303E               	movlw	low (__pdataBANK0+30)
   228     07E2  00FD               	movwf	btemp+-1
   229     07E3  3005               	movlw	high __pidataBANK0
   230     07E4  00FE               	movwf	btemp
   231     07E5  302B               	movlw	low __pidataBANK0
   232     07E6  00FF               	movwf	btemp+1
   233     07E7  3020               	movlw	low __pdataBANK0
   234     07E8  0084               	movwf	4
   235     07E9  120A  118A  24DC  120A  118A  	fcall	init_ram0
   236                           
   237                           ; Clear objects allocated to BANK0
   238     07EE  01BE               	clrf	__pbssBANK0& (0+127)
   239     07EF  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   240     07F0  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   241     07F1  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   242     07F2  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   243     07F3  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   244     07F4  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   245     07F5  01C5               	clrf	(__pbssBANK0+7)& (0+127)
   246     07F6  01C6               	clrf	(__pbssBANK0+8)& (0+127)
   247     07F7  01C7               	clrf	(__pbssBANK0+9)& (0+127)
   248     07F8  01C8               	clrf	(__pbssBANK0+10)& (0+127)
   249     07F9  01C9               	clrf	(__pbssBANK0+11)& (0+127)
   250     07FA  01CA               	clrf	(__pbssBANK0+12)& (0+127)
   251     07FB  01CB               	clrf	(__pbssBANK0+13)& (0+127)
   252     07FC                     end_of_initialization:	
   253                           ;End of C runtime variable initialization code
   254                           
   255     07FC                     __end_of__initialization:
   256     07FC  0183               	clrf	3
   257     07FD  120A  118A  2CCA   	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	bssBANK0
   260     003E                     __pbssBANK0:
   261     003E                     _i:
   262     003E                     	ds	2
   263     0040                     _j:
   264     0040                     	ds	2
   265     0042                     _d1:
   266     0042                     	ds	2
   267     0044                     _d2:
   268     0044                     	ds	2
   269     0046                     _d3:
   270     0046                     	ds	2
   271     0048                     _d4:
   272     0048                     	ds	2
   273     004A                     _value:
   274     004A                     	ds	1
   275     004B                     _x:
   276     004B                     	ds	1
   277                           
   278                           	psect	dataBANK0
   279     0020                     __pdataBANK0:
   280     0020                     _array:
   281     0020                     	ds	30
   282                           
   283                           	psect	inittext
   284     04D8                     init_fetch0:	
   285                           ;	Called with low address in FSR and high address in W
   286                           
   287     04D8  087E               	movf	btemp,w
   288     04D9  008A               	movwf	10
   289     04DA  087F               	movf	btemp+1,w
   290     04DB  0082               	movwf	2
   291     04DC                     init_ram0:	
   292                           ;Called with:
   293                           ;	high address of idata address in btemp 
   294                           ;	low address of idata address in btemp+1 
   295                           ;	low address of data in FSR
   296                           ;	high address + 1 of data in btemp-1
   297                           
   298     04DC  120A  118A  24D8  120A  118A  	fcall	init_fetch0
   299     04E1  0080               	movwf	0
   300     04E2  0A84               	incf	4,f
   301     04E3  0804               	movf	4,w
   302     04E4  067D               	xorwf	btemp+-1,w
   303     04E5  1903               	btfsc	3,2
   304     04E6  3400               	retlw	0
   305     04E7  0AFF               	incf	btemp+1,f
   306     04E8  1903               	btfsc	3,2
   307     04E9  0AFE               	incf	btemp,f
   308     04EA  2CDC               	goto	init_ram0
   309                           
   310                           	psect	cstackCOMMON
   311     0070                     __pcstackCOMMON:
   312     0070                     ?_LCD_PIC_init:
   313     0070                     ?_keyscane:	
   314                           ; 1 bytes @ 0x0
   315                           
   316     0070                     ?_LCD_command:	
   317                           ; 1 bytes @ 0x0
   318                           
   319     0070                     ??_LCD_command:	
   320                           ; 1 bytes @ 0x0
   321                           
   322     0070                     ?_LCD_data:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0070                     ??_LCD_data:	
   326                           ; 1 bytes @ 0x0
   327                           
   328     0070                     ?_main:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ?___bmul:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ?___wmul:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ___bmul@multiplicand:	
   338                           ; 2 bytes @ 0x0
   339                           
   340     0070                     ___wmul@multiplier:	
   341                           ; 1 bytes @ 0x0
   342                           
   343                           
   344                           ; 2 bytes @ 0x0
   345     0070                     	ds	1
   346     0071                     ??___bmul:
   347     0071                     ___bmul@product:	
   348                           ; 1 bytes @ 0x1
   349                           
   350                           
   351                           ; 1 bytes @ 0x1
   352     0071                     	ds	1
   353     0072                     LCD_command@hex:
   354     0072                     LCD_data@hex:	
   355                           ; 1 bytes @ 0x2
   356                           
   357     0072                     ___bmul@multiplier:	
   358                           ; 1 bytes @ 0x2
   359                           
   360     0072                     ___wmul@multiplicand:	
   361                           ; 1 bytes @ 0x2
   362                           
   363                           
   364                           ; 2 bytes @ 0x2
   365     0072                     	ds	1
   366     0073                     ??_LCD_PIC_init:
   367                           
   368                           ; 1 bytes @ 0x3
   369     0073                     	ds	1
   370     0074                     ??___wmul:
   371     0074                     ___wmul@product:	
   372                           ; 1 bytes @ 0x4
   373                           
   374                           
   375                           ; 2 bytes @ 0x4
   376     0074                     	ds	2
   377     0076                     ?___lwdiv:
   378     0076                     ___lwdiv@divisor:	
   379                           ; 2 bytes @ 0x6
   380                           
   381                           
   382                           ; 2 bytes @ 0x6
   383     0076                     	ds	2
   384     0078                     ___lwdiv@dividend:
   385                           
   386                           ; 2 bytes @ 0x8
   387     0078                     	ds	2
   388     007A                     ??___lwdiv:
   389     007A                     ___lwdiv@quotient:	
   390                           ; 1 bytes @ 0xA
   391                           
   392                           
   393                           ; 2 bytes @ 0xA
   394     007A                     	ds	2
   395     007C                     ___lwdiv@counter:
   396                           
   397                           ; 1 bytes @ 0xC
   398     007C                     	ds	1
   399     007D                     ??_main:
   400                           
   401                           	psect	cstackBANK0
   402     004C                     __pcstackBANK0:	
   403                           ; 1 bytes @ 0xD
   404                           
   405     004C                     ?_LCD_output:
   406     004C                     LCD_output@i:	
   407                           ; 1 bytes @ 0x0
   408                           
   409                           
   410                           ; 2 bytes @ 0x0
   411     004C                     	ds	2
   412     004E                     ??_LCD_output:
   413                           
   414                           ; 1 bytes @ 0x2
   415     004E                     	ds	6
   416     0054                     ??_keyscane:
   417                           
   418                           ; 1 bytes @ 0x8
   419     0054                     	ds	2
   420                           
   421                           	psect	maintext
   422     04CA                     __pmaintext:	
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   425 ;;
   426 ;; *************** function _main *****************
   427 ;; Defined at:
   428 ;;		line 37 in file "LCD_SWITCH_week4.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : B00/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0
   445 ;;      Totals:         0       0       0       0       0
   446 ;;Total ram usage:        0 bytes
   447 ;; Hardware stack levels required when called: 3
   448 ;; This function calls:
   449 ;;		_LCD_PIC_init
   450 ;;		_keyscane
   451 ;; This function is called by:
   452 ;;		Startup code after reset
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456     04CA                     _main:	
   457                           ;psect for function _main
   458                           
   459     04CA                     l993:	
   460                           ;incstack = 0
   461                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   462                           
   463                           
   464                           ;LCD_SWITCH_week4.c: 38:     LCD_PIC_init();
   465     04CA  120A  118A  25B2  120A  118A  	fcall	_LCD_PIC_init
   466     04CF                     l995:
   467                           
   468                           ;LCD_SWITCH_week4.c: 40:         keyscane();
   469     04CF  120A  118A  2629  120A  118A  	fcall	_keyscane
   470     04D4  2CCF               	goto	l995
   471     04D5  120A  118A  2800   	ljmp	start
   472     04D8                     __end_of_main:
   473                           
   474                           	psect	text1
   475     0629                     __ptext1:	
   476 ;; *************** function _keyscane *****************
   477 ;; Defined at:
   478 ;;		line 44 in file "LCD_SWITCH_week4.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   492 ;;      Params:         0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0
   494 ;;      Temps:          0       2       0       0       0
   495 ;;      Totals:         0       2       0       0       0
   496 ;;Total ram usage:        2 bytes
   497 ;; Hardware stack levels used: 1
   498 ;; Hardware stack levels required when called: 2
   499 ;; This function calls:
   500 ;;		_LCD_command
   501 ;;		_LCD_data
   502 ;;		_LCD_output
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508     0629                     _keyscane:	
   509                           ;psect for function _keyscane
   510                           
   511     0629                     l929:	
   512                           ;incstack = 0
   513                           ; Regs used in _keyscane: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   514                           
   515                           
   516                           ;LCD_SWITCH_week4.c: 45:     value = PORTB & 0xF0;
   517     0629  1283               	bcf	3,5	;RP0=0, select bank0
   518     062A  1303               	bcf	3,6	;RP1=0, select bank0
   519     062B  0806               	movf	6,w	;volatile
   520     062C  39F0               	andlw	240
   521     062D  00CA               	movwf	_value
   522                           
   523                           ;LCD_SWITCH_week4.c: 47:     switch (value) {
   524     062E  2EDE               	goto	l987
   525     062F                     l931:
   526                           
   527                           ;LCD_SWITCH_week4.c: 49:             LCD_command(0x80);
   528     062F  3080               	movlw	128
   529     0630  120A  118A  2514  120A  118A  	fcall	_LCD_command
   530     0635                     l933:
   531                           
   532                           ;LCD_SWITCH_week4.c: 50:             for (x = 0; x < 8; x++) {
   533     0635  1283               	bcf	3,5	;RP0=0, select bank0
   534     0636  1303               	bcf	3,6	;RP1=0, select bank0
   535     0637  01CB               	clrf	_x
   536     0638                     l939:
   537                           
   538                           ;LCD_SWITCH_week4.c: 51:                 LCD_data(array[x]);
   539     0638  084B               	movf	_x,w
   540     0639  3E20               	addlw	(low (_array| 0))& (0+255)
   541     063A  0084               	movwf	4
   542     063B  1383               	bcf	3,7	;select IRP bank0
   543     063C  0800               	movf	0,w
   544     063D  120A  118A  24EB  120A  118A  	fcall	_LCD_data
   545     0642                     l941:
   546                           
   547                           ;LCD_SWITCH_week4.c: 52:             }
   548     0642  3001               	movlw	1
   549     0643  00FF               	movwf	btemp+1
   550     0644  087F               	movf	btemp+1,w
   551     0645  1283               	bcf	3,5	;RP0=0, select bank0
   552     0646  1303               	bcf	3,6	;RP1=0, select bank0
   553     0647  07CB               	addwf	_x,f
   554     0648                     l943:
   555     0648  3008               	movlw	8
   556     0649  024B               	subwf	_x,w
   557     064A  1C03               	skipc
   558     064B  2E4D               	goto	u311
   559     064C  2E4E               	goto	u310
   560     064D                     u311:
   561     064D  2E38               	goto	l939
   562     064E                     u310:
   563     064E                     l945:
   564                           
   565                           ;LCD_SWITCH_week4.c: 53:             LCD_command(0x8D);
   566     064E  308D               	movlw	141
   567     064F  120A  118A  2514  120A  118A  	fcall	_LCD_command
   568     0654                     l947:
   569                           
   570                           ;LCD_SWITCH_week4.c: 54:             for (x = 12; x < 15; x++) {
   571     0654  300C               	movlw	12
   572     0655  1283               	bcf	3,5	;RP0=0, select bank0
   573     0656  1303               	bcf	3,6	;RP1=0, select bank0
   574     0657  00CB               	movwf	_x
   575     0658                     l953:
   576                           
   577                           ;LCD_SWITCH_week4.c: 55:                 LCD_data(array[x]);
   578     0658  084B               	movf	_x,w
   579     0659  3E20               	addlw	(low (_array| 0))& (0+255)
   580     065A  0084               	movwf	4
   581     065B  1383               	bcf	3,7	;select IRP bank0
   582     065C  0800               	movf	0,w
   583     065D  120A  118A  24EB  120A  118A  	fcall	_LCD_data
   584     0662                     l955:
   585                           
   586                           ;LCD_SWITCH_week4.c: 56:             }
   587     0662  3001               	movlw	1
   588     0663  00FF               	movwf	btemp+1
   589     0664  087F               	movf	btemp+1,w
   590     0665  1283               	bcf	3,5	;RP0=0, select bank0
   591     0666  1303               	bcf	3,6	;RP1=0, select bank0
   592     0667  07CB               	addwf	_x,f
   593     0668                     l957:
   594     0668  300F               	movlw	15
   595     0669  024B               	subwf	_x,w
   596     066A  1C03               	skipc
   597     066B  2E6D               	goto	u321
   598     066C  2E6E               	goto	u320
   599     066D                     u321:
   600     066D  2E58               	goto	l953
   601     066E                     u320:
   602     066E                     l959:
   603                           
   604                           ;LCD_SWITCH_week4.c: 57:             LCD_command(0x88);
   605     066E  3088               	movlw	136
   606     066F  120A  118A  2514  120A  118A  	fcall	_LCD_command
   607                           
   608                           ;LCD_SWITCH_week4.c: 58:             LCD_output(j);
   609     0674  1283               	bcf	3,5	;RP0=0, select bank0
   610     0675  1303               	bcf	3,6	;RP1=0, select bank0
   611     0676  0841               	movf	_j+1,w
   612     0677  00CD               	movwf	LCD_output@i+1
   613     0678  0840               	movf	_j,w
   614     0679  00CC               	movwf	LCD_output@i
   615     067A  120A  118A  26F5  120A  118A  	fcall	_LCD_output
   616                           
   617                           ;LCD_SWITCH_week4.c: 59:             break;
   618     067F  2EF4               	goto	l65
   619     0680                     l961:
   620                           
   621                           ;LCD_SWITCH_week4.c: 61:             j++;
   622     0680  3001               	movlw	1
   623     0681  07C0               	addwf	_j,f
   624     0682  1803               	skipnc
   625     0683  0AC1               	incf	_j+1,f
   626     0684  3000               	movlw	0
   627     0685  07C1               	addwf	_j+1,f
   628     0686                     l963:
   629                           
   630                           ;LCD_SWITCH_week4.c: 62:             LCD_command(0x80);
   631     0686  3080               	movlw	128
   632     0687  120A  118A  2514  120A  118A  	fcall	_LCD_command
   633     068C                     l965:
   634                           
   635                           ;LCD_SWITCH_week4.c: 63:             LCD_output(j);
   636     068C  1283               	bcf	3,5	;RP0=0, select bank0
   637     068D  1303               	bcf	3,6	;RP1=0, select bank0
   638     068E  0841               	movf	_j+1,w
   639     068F  00CD               	movwf	LCD_output@i+1
   640     0690  0840               	movf	_j,w
   641     0691  00CC               	movwf	LCD_output@i
   642     0692  120A  118A  26F5  120A  118A  	fcall	_LCD_output
   643                           
   644                           ;LCD_SWITCH_week4.c: 64:             if (j > 2000) {
   645     0697  3007               	movlw	7
   646     0698  1283               	bcf	3,5	;RP0=0, select bank0
   647     0699  1303               	bcf	3,6	;RP1=0, select bank0
   648     069A  0241               	subwf	_j+1,w
   649     069B  30D1               	movlw	209
   650     069C  1903               	skipnz
   651     069D  0240               	subwf	_j,w
   652     069E  1C03               	skipc
   653     069F  2EA1               	goto	u331
   654     06A0  2EA2               	goto	u330
   655     06A1                     u331:
   656     06A1  2EF4               	goto	l65
   657     06A2                     u330:
   658     06A2                     l967:
   659                           
   660                           ;LCD_SWITCH_week4.c: 65:                 j = 2000;
   661     06A2  30D0               	movlw	208
   662     06A3  00C0               	movwf	_j
   663     06A4  3007               	movlw	7
   664     06A5  00C1               	movwf	_j+1
   665     06A6  2EF4               	goto	l65
   666     06A7                     l969:
   667                           
   668                           ;LCD_SWITCH_week4.c: 69:             j--;
   669     06A7  3001               	movlw	1
   670     06A8  02C0               	subwf	_j,f
   671     06A9  3000               	movlw	0
   672     06AA  1C03               	skipc
   673     06AB  03C1               	decf	_j+1,f
   674     06AC  02C1               	subwf	_j+1,f
   675     06AD                     l971:
   676                           
   677                           ;LCD_SWITCH_week4.c: 70:             LCD_command(0x80);
   678     06AD  3080               	movlw	128
   679     06AE  120A  118A  2514  120A  118A  	fcall	_LCD_command
   680     06B3                     l973:
   681                           
   682                           ;LCD_SWITCH_week4.c: 71:             LCD_output(j);
   683     06B3  1283               	bcf	3,5	;RP0=0, select bank0
   684     06B4  1303               	bcf	3,6	;RP1=0, select bank0
   685     06B5  0841               	movf	_j+1,w
   686     06B6  00CD               	movwf	LCD_output@i+1
   687     06B7  0840               	movf	_j,w
   688     06B8  00CC               	movwf	LCD_output@i
   689     06B9  120A  118A  26F5  120A  118A  	fcall	_LCD_output
   690     06BE                     l975:
   691                           
   692                           ;LCD_SWITCH_week4.c: 72:             if (j < 1) {
   693     06BE  1283               	bcf	3,5	;RP0=0, select bank0
   694     06BF  1303               	bcf	3,6	;RP1=0, select bank0
   695     06C0  0840               	movf	_j,w
   696     06C1  0441               	iorwf	_j+1,w
   697     06C2  1D03               	btfss	3,2
   698     06C3  2EC5               	goto	u341
   699     06C4  2EC6               	goto	u340
   700     06C5                     u341:
   701     06C5  2EF4               	goto	l65
   702     06C6                     u340:
   703     06C6                     l977:
   704                           
   705                           ;LCD_SWITCH_week4.c: 73:                 j = 1;
   706     06C6  3001               	movlw	1
   707     06C7  00C0               	movwf	_j
   708     06C8  3000               	movlw	0
   709     06C9  00C1               	movwf	_j+1
   710     06CA  2EF4               	goto	l65
   711     06CB                     l979:
   712                           
   713                           ;LCD_SWITCH_week4.c: 77:             j = 0;
   714     06CB  01C0               	clrf	_j
   715     06CC  01C1               	clrf	_j+1
   716     06CD                     l981:
   717                           
   718                           ;LCD_SWITCH_week4.c: 78:             LCD_command(0x80);
   719     06CD  3080               	movlw	128
   720     06CE  120A  118A  2514  120A  118A  	fcall	_LCD_command
   721     06D3                     l983:
   722                           
   723                           ;LCD_SWITCH_week4.c: 79:             LCD_output(j);
   724     06D3  3000               	movlw	0
   725     06D4  1283               	bcf	3,5	;RP0=0, select bank0
   726     06D5  1303               	bcf	3,6	;RP1=0, select bank0
   727     06D6  00CC               	movwf	LCD_output@i
   728     06D7  00CD               	movwf	LCD_output@i+1
   729     06D8  120A  118A  26F5  120A  118A  	fcall	_LCD_output
   730                           
   731                           ;LCD_SWITCH_week4.c: 80:             break;
   732     06DD  2EF4               	goto	l65
   733     06DE                     l987:
   734     06DE  084A               	movf	_value,w
   735     06DF  00D4               	movwf	??_keyscane
   736     06E0  01D5               	clrf	??_keyscane+1
   737                           
   738                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   739                           ; Switch size 1, requested type "simple"
   740                           ; Number of cases is 1, Range of values is 0 to 0
   741                           ; switch strategies available:
   742                           ; Name         Instructions Cycles
   743                           ; simple_byte            4     3 (average)
   744                           ; direct_byte           11     8 (fixed)
   745                           ; jumptable            260     6 (fixed)
   746                           ;	Chosen strategy is simple_byte
   747     06E1  0855               	movf	??_keyscane+1,w
   748     06E2  3A00               	xorlw	0	; case 0
   749     06E3  1903               	skipnz
   750     06E4  2EE6               	goto	l1017
   751     06E5  2EF4               	goto	l65
   752     06E6                     l1017:
   753                           
   754                           ; Switch size 1, requested type "simple"
   755                           ; Number of cases is 4, Range of values is 112 to 224
   756                           ; switch strategies available:
   757                           ; Name         Instructions Cycles
   758                           ; simple_byte           13     7 (average)
   759                           ; jumptable            263     9 (fixed)
   760                           ;	Chosen strategy is simple_byte
   761     06E6  0854               	movf	??_keyscane,w
   762     06E7  3A70               	xorlw	112	; case 112
   763     06E8  1903               	skipnz
   764     06E9  2ECB               	goto	l979
   765     06EA  3AC0               	xorlw	192	; case 176
   766     06EB  1903               	skipnz
   767     06EC  2EA7               	goto	l969
   768     06ED  3A60               	xorlw	96	; case 208
   769     06EE  1903               	skipnz
   770     06EF  2E80               	goto	l961
   771     06F0  3A30               	xorlw	48	; case 224
   772     06F1  1903               	skipnz
   773     06F2  2E2F               	goto	l931
   774     06F3  2EF4               	goto	l65
   775     06F4                     l65:
   776     06F4  0008               	return
   777     06F5                     __end_of_keyscane:
   778                           
   779                           	psect	text2
   780     06F5                     __ptext2:	
   781 ;; *************** function _LCD_output *****************
   782 ;; Defined at:
   783 ;;		line 84 in file "LCD_SWITCH_week4.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  i               2    0[BANK0 ] unsigned int 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   797 ;;      Params:         0       2       0       0       0
   798 ;;      Locals:         0       0       0       0       0
   799 ;;      Temps:          0       6       0       0       0
   800 ;;      Totals:         0       8       0       0       0
   801 ;;Total ram usage:        8 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; Hardware stack levels required when called: 1
   804 ;; This function calls:
   805 ;;		_LCD_command
   806 ;;		_LCD_data
   807 ;;		___bmul
   808 ;;		___lwdiv
   809 ;;		___wmul
   810 ;; This function is called by:
   811 ;;		_keyscane
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815     06F5                     _LCD_output:	
   816                           ;psect for function _LCD_output
   817                           
   818     06F5                     l899:	
   819                           ;incstack = 0
   820                           ; Regs used in _LCD_output: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   821                           
   822                           
   823                           ;LCD_SWITCH_week4.c: 85:     d4 = (unsigned char) (i / 1000);
   824     06F5  30E8               	movlw	232
   825     06F6  00F6               	movwf	___lwdiv@divisor
   826     06F7  3003               	movlw	3
   827     06F8  00F7               	movwf	___lwdiv@divisor+1
   828     06F9  1283               	bcf	3,5	;RP0=0, select bank0
   829     06FA  1303               	bcf	3,6	;RP1=0, select bank0
   830     06FB  084D               	movf	LCD_output@i+1,w
   831     06FC  00F9               	movwf	___lwdiv@dividend+1
   832     06FD  084C               	movf	LCD_output@i,w
   833     06FE  00F8               	movwf	___lwdiv@dividend
   834     06FF  120A  118A  256E  120A  118A  	fcall	___lwdiv
   835     0704  0876               	movf	?___lwdiv,w
   836     0705  1283               	bcf	3,5	;RP0=0, select bank0
   837     0706  1303               	bcf	3,6	;RP1=0, select bank0
   838     0707  00CE               	movwf	??_LCD_output
   839     0708  01CF               	clrf	??_LCD_output+1
   840     0709  084E               	movf	??_LCD_output,w
   841     070A  00C8               	movwf	_d4
   842     070B  084F               	movf	??_LCD_output+1,w
   843     070C  00C9               	movwf	_d4+1
   844                           
   845                           ;LCD_SWITCH_week4.c: 86:     d3 = (unsigned char) ((i - (d4 * 1000)) / 100);
   846     070D  3064               	movlw	100
   847     070E  00F6               	movwf	___lwdiv@divisor
   848     070F  3000               	movlw	0
   849     0710  00F7               	movwf	___lwdiv@divisor+1
   850     0711  0849               	movf	_d4+1,w
   851     0712  00F1               	movwf	___wmul@multiplier+1
   852     0713  0848               	movf	_d4,w
   853     0714  00F0               	movwf	___wmul@multiplier
   854     0715  3018               	movlw	24
   855     0716  00F2               	movwf	___wmul@multiplicand
   856     0717  30FC               	movlw	252
   857     0718  00F3               	movwf	___wmul@multiplicand+1
   858     0719  120A  118A  2549  120A  118A  	fcall	___wmul
   859     071E  1283               	bcf	3,5	;RP0=0, select bank0
   860     071F  1303               	bcf	3,6	;RP1=0, select bank0
   861     0720  084C               	movf	LCD_output@i,w
   862     0721  0770               	addwf	?___wmul,w
   863     0722  00F8               	movwf	___lwdiv@dividend
   864     0723  084D               	movf	LCD_output@i+1,w
   865     0724  1803               	skipnc
   866     0725  0A4D               	incf	LCD_output@i+1,w
   867     0726  0771               	addwf	?___wmul+1,w
   868     0727  00F9               	movwf	___lwdiv@dividend+1
   869     0728  120A  118A  256E  120A  118A  	fcall	___lwdiv
   870     072D  0876               	movf	?___lwdiv,w
   871     072E  1283               	bcf	3,5	;RP0=0, select bank0
   872     072F  1303               	bcf	3,6	;RP1=0, select bank0
   873     0730  00CE               	movwf	??_LCD_output
   874     0731  01CF               	clrf	??_LCD_output+1
   875     0732  084E               	movf	??_LCD_output,w
   876     0733  00C6               	movwf	_d3
   877     0734  084F               	movf	??_LCD_output+1,w
   878     0735  00C7               	movwf	_d3+1
   879                           
   880                           ;LCD_SWITCH_week4.c: 87:     d2 = (unsigned char) ((i - (d4 * 1000)-(d3 * 100)) / 10);
   881     0736  300A               	movlw	10
   882     0737  00F6               	movwf	___lwdiv@divisor
   883     0738  3000               	movlw	0
   884     0739  00F7               	movwf	___lwdiv@divisor+1
   885     073A  0849               	movf	_d4+1,w
   886     073B  00F1               	movwf	___wmul@multiplier+1
   887     073C  0848               	movf	_d4,w
   888     073D  00F0               	movwf	___wmul@multiplier
   889     073E  3018               	movlw	24
   890     073F  00F2               	movwf	___wmul@multiplicand
   891     0740  30FC               	movlw	252
   892     0741  00F3               	movwf	___wmul@multiplicand+1
   893     0742  120A  118A  2549  120A  118A  	fcall	___wmul
   894     0747  0870               	movf	?___wmul,w
   895     0748  1283               	bcf	3,5	;RP0=0, select bank0
   896     0749  1303               	bcf	3,6	;RP1=0, select bank0
   897     074A  00CE               	movwf	??_LCD_output
   898     074B  0871               	movf	?___wmul+1,w
   899     074C  00CF               	movwf	??_LCD_output+1
   900     074D  0847               	movf	_d3+1,w
   901     074E  00F1               	movwf	___wmul@multiplier+1
   902     074F  0846               	movf	_d3,w
   903     0750  00F0               	movwf	___wmul@multiplier
   904     0751  309C               	movlw	156
   905     0752  00F2               	movwf	___wmul@multiplicand
   906     0753  30FF               	movlw	255
   907     0754  00F3               	movwf	___wmul@multiplicand+1
   908     0755  120A  118A  2549  120A  118A  	fcall	___wmul
   909     075A  0870               	movf	?___wmul,w
   910     075B  1283               	bcf	3,5	;RP0=0, select bank0
   911     075C  1303               	bcf	3,6	;RP1=0, select bank0
   912     075D  074E               	addwf	??_LCD_output,w
   913     075E  00D0               	movwf	??_LCD_output+2
   914     075F  0871               	movf	?___wmul+1,w
   915     0760  1803               	skipnc
   916     0761  0A71               	incf	?___wmul+1,w
   917     0762  074F               	addwf	??_LCD_output+1,w
   918     0763  00D1               	movwf	??_LCD_output+3
   919     0764  084C               	movf	LCD_output@i,w
   920     0765  0750               	addwf	??_LCD_output+2,w
   921     0766  00F8               	movwf	___lwdiv@dividend
   922     0767  084D               	movf	LCD_output@i+1,w
   923     0768  1803               	skipnc
   924     0769  0A4D               	incf	LCD_output@i+1,w
   925     076A  0751               	addwf	??_LCD_output+3,w
   926     076B  00F9               	movwf	___lwdiv@dividend+1
   927     076C  120A  118A  256E  120A  118A  	fcall	___lwdiv
   928     0771  0876               	movf	?___lwdiv,w
   929     0772  1283               	bcf	3,5	;RP0=0, select bank0
   930     0773  1303               	bcf	3,6	;RP1=0, select bank0
   931     0774  00D2               	movwf	??_LCD_output+4
   932     0775  01D3               	clrf	??_LCD_output+5
   933     0776  0852               	movf	??_LCD_output+4,w
   934     0777  00C4               	movwf	_d2
   935     0778  0853               	movf	??_LCD_output+5,w
   936     0779  00C5               	movwf	_d2+1
   937                           
   938                           ;LCD_SWITCH_week4.c: 88:     d1 = (unsigned char) (i - (d4 * 1000)-(d3 * 100)-(d2 * 10))
      +                          ;
   939     077A  3018               	movlw	24
   940     077B  00F0               	movwf	___bmul@multiplicand
   941     077C  0848               	movf	_d4,w
   942     077D  120A  118A  24FF  120A  118A  	fcall	___bmul
   943     0782  1283               	bcf	3,5	;RP0=0, select bank0
   944     0783  1303               	bcf	3,6	;RP1=0, select bank0
   945     0784  00CE               	movwf	??_LCD_output
   946     0785  309C               	movlw	156
   947     0786  00F0               	movwf	___bmul@multiplicand
   948     0787  0846               	movf	_d3,w
   949     0788  120A  118A  24FF  120A  118A  	fcall	___bmul
   950     078D  1283               	bcf	3,5	;RP0=0, select bank0
   951     078E  1303               	bcf	3,6	;RP1=0, select bank0
   952     078F  00CF               	movwf	??_LCD_output+1
   953     0790  30F6               	movlw	246
   954     0791  00F0               	movwf	___bmul@multiplicand
   955     0792  0844               	movf	_d2,w
   956     0793  120A  118A  24FF  120A  118A  	fcall	___bmul
   957     0798  1283               	bcf	3,5	;RP0=0, select bank0
   958     0799  1303               	bcf	3,6	;RP1=0, select bank0
   959     079A  074F               	addwf	??_LCD_output+1,w
   960     079B  074E               	addwf	??_LCD_output,w
   961     079C  074C               	addwf	LCD_output@i,w
   962     079D  00D0               	movwf	??_LCD_output+2
   963     079E  01D1               	clrf	??_LCD_output+3
   964     079F  0850               	movf	??_LCD_output+2,w
   965     07A0  00C2               	movwf	_d1
   966     07A1  0851               	movf	??_LCD_output+3,w
   967     07A2  00C3               	movwf	_d1+1
   968                           
   969                           ;LCD_SWITCH_week4.c: 89:     LCD_command(0x88);
   970     07A3  3088               	movlw	136
   971     07A4  120A  118A  2514  120A  118A  	fcall	_LCD_command
   972                           
   973                           ;LCD_SWITCH_week4.c: 90:     LCD_data(0x30 + d4);
   974     07A9  1283               	bcf	3,5	;RP0=0, select bank0
   975     07AA  1303               	bcf	3,6	;RP1=0, select bank0
   976     07AB  0848               	movf	_d4,w
   977     07AC  3E30               	addlw	48
   978     07AD  120A  118A  24EB  120A  118A  	fcall	_LCD_data
   979                           
   980                           ;LCD_SWITCH_week4.c: 91:     LCD_command(0x89);
   981     07B2  3089               	movlw	137
   982     07B3  120A  118A  2514  120A  118A  	fcall	_LCD_command
   983                           
   984                           ;LCD_SWITCH_week4.c: 92:     LCD_data(0x30 + d3);
   985     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   986     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   987     07BA  0846               	movf	_d3,w
   988     07BB  3E30               	addlw	48
   989     07BC  120A  118A  24EB  120A  118A  	fcall	_LCD_data
   990                           
   991                           ;LCD_SWITCH_week4.c: 93:     LCD_command(0x8A);
   992     07C1  308A               	movlw	138
   993     07C2  120A  118A  2514  120A  118A  	fcall	_LCD_command
   994                           
   995                           ;LCD_SWITCH_week4.c: 94:     LCD_data(0x30 + d2);
   996     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   997     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   998     07C9  0844               	movf	_d2,w
   999     07CA  3E30               	addlw	48
  1000     07CB  120A  118A  24EB  120A  118A  	fcall	_LCD_data
  1001                           
  1002                           ;LCD_SWITCH_week4.c: 95:     LCD_command(0x8B);
  1003     07D0  308B               	movlw	139
  1004     07D1  120A  118A  2514  120A  118A  	fcall	_LCD_command
  1005                           
  1006                           ;LCD_SWITCH_week4.c: 96:     LCD_data(0x30 + d1);
  1007     07D6  1283               	bcf	3,5	;RP0=0, select bank0
  1008     07D7  1303               	bcf	3,6	;RP1=0, select bank0
  1009     07D8  0842               	movf	_d1,w
  1010     07D9  3E30               	addlw	48
  1011     07DA  120A  118A  24EB  120A  118A  	fcall	_LCD_data
  1012     07DF                     l68:
  1013     07DF  0008               	return
  1014     07E0                     __end_of_LCD_output:
  1015                           
  1016                           	psect	text3
  1017     0549                     __ptext3:	
  1018 ;; *************** function ___wmul *****************
  1019 ;; Defined at:
  1020 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;  multiplier      2    0[COMMON] unsigned int 
  1023 ;;  multiplicand    2    2[COMMON] unsigned int 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  product         2    4[COMMON] unsigned int 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  2    0[COMMON] unsigned int 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         4       0       0       0       0
  1036 ;;      Locals:         2       0       0       0       0
  1037 ;;      Temps:          0       0       0       0       0
  1038 ;;      Totals:         6       0       0       0       0
  1039 ;;Total ram usage:        6 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_LCD_output
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048     0549                     ___wmul:	
  1049                           ;psect for function ___wmul
  1050                           
  1051     0549                     l843:	
  1052                           ;incstack = 0
  1053                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1054                           
  1055     0549  01F4               	clrf	___wmul@product
  1056     054A  01F5               	clrf	___wmul@product+1
  1057     054B                     l845:
  1058     054B  1C70               	btfss	___wmul@multiplier,0
  1059     054C  2D4E               	goto	u181
  1060     054D  2D4F               	goto	u180
  1061     054E                     u181:
  1062     054E  2D55               	goto	l163
  1063     054F                     u180:
  1064     054F                     l847:
  1065     054F  0872               	movf	___wmul@multiplicand,w
  1066     0550  07F4               	addwf	___wmul@product,f
  1067     0551  1803               	skipnc
  1068     0552  0AF5               	incf	___wmul@product+1,f
  1069     0553  0873               	movf	___wmul@multiplicand+1,w
  1070     0554  07F5               	addwf	___wmul@product+1,f
  1071     0555                     l163:
  1072     0555  3001               	movlw	1
  1073     0556                     u195:
  1074     0556  1003               	clrc
  1075     0557  0DF2               	rlf	___wmul@multiplicand,f
  1076     0558  0DF3               	rlf	___wmul@multiplicand+1,f
  1077     0559  3EFF               	addlw	-1
  1078     055A  1D03               	skipz
  1079     055B  2D56               	goto	u195
  1080     055C                     l849:
  1081     055C  3001               	movlw	1
  1082     055D                     u205:
  1083     055D  1003               	clrc
  1084     055E  0CF1               	rrf	___wmul@multiplier+1,f
  1085     055F  0CF0               	rrf	___wmul@multiplier,f
  1086     0560  3EFF               	addlw	-1
  1087     0561  1D03               	skipz
  1088     0562  2D5D               	goto	u205
  1089     0563                     l851:
  1090     0563  0870               	movf	___wmul@multiplier,w
  1091     0564  0471               	iorwf	___wmul@multiplier+1,w
  1092     0565  1D03               	btfss	3,2
  1093     0566  2D68               	goto	u211
  1094     0567  2D69               	goto	u210
  1095     0568                     u211:
  1096     0568  2D4B               	goto	l845
  1097     0569                     u210:
  1098     0569                     l853:
  1099     0569  0875               	movf	___wmul@product+1,w
  1100     056A  00F1               	movwf	?___wmul+1
  1101     056B  0874               	movf	___wmul@product,w
  1102     056C  00F0               	movwf	?___wmul
  1103     056D                     l165:
  1104     056D  0008               	return
  1105     056E                     __end_of___wmul:
  1106                           
  1107                           	psect	text4
  1108     056E                     __ptext4:	
  1109 ;; *************** function ___lwdiv *****************
  1110 ;; Defined at:
  1111 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  divisor         2    6[COMMON] unsigned int 
  1114 ;;  dividend        2    8[COMMON] unsigned int 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  quotient        2   10[COMMON] unsigned int 
  1117 ;;  counter         1   12[COMMON] unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  2    6[COMMON] unsigned int 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0, btemp+1
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         4       0       0       0       0
  1128 ;;      Locals:         3       0       0       0       0
  1129 ;;      Temps:          0       0       0       0       0
  1130 ;;      Totals:         7       0       0       0       0
  1131 ;;Total ram usage:        7 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_LCD_output
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140     056E                     ___lwdiv:	
  1141                           ;psect for function ___lwdiv
  1142                           
  1143     056E                     l873:	
  1144                           ;incstack = 0
  1145                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1146                           
  1147     056E  01FA               	clrf	___lwdiv@quotient
  1148     056F  01FB               	clrf	___lwdiv@quotient+1
  1149     0570                     l875:
  1150     0570  0876               	movf	___lwdiv@divisor,w
  1151     0571  0477               	iorwf	___lwdiv@divisor+1,w
  1152     0572  1903               	btfsc	3,2
  1153     0573  2D75               	goto	u241
  1154     0574  2D76               	goto	u240
  1155     0575                     u241:
  1156     0575  2DAD               	goto	l895
  1157     0576                     u240:
  1158     0576                     l877:
  1159     0576  01FC               	clrf	___lwdiv@counter
  1160     0577  0AFC               	incf	___lwdiv@counter,f
  1161     0578  2D84               	goto	l883
  1162     0579                     l879:
  1163     0579  3001               	movlw	1
  1164     057A                     u255:
  1165     057A  1003               	clrc
  1166     057B  0DF6               	rlf	___lwdiv@divisor,f
  1167     057C  0DF7               	rlf	___lwdiv@divisor+1,f
  1168     057D  3EFF               	addlw	-1
  1169     057E  1D03               	skipz
  1170     057F  2D7A               	goto	u255
  1171     0580                     l881:
  1172     0580  3001               	movlw	1
  1173     0581  00FF               	movwf	btemp+1
  1174     0582  087F               	movf	btemp+1,w
  1175     0583  07FC               	addwf	___lwdiv@counter,f
  1176     0584                     l883:
  1177     0584  1FF7               	btfss	___lwdiv@divisor+1,7
  1178     0585  2D87               	goto	u261
  1179     0586  2D88               	goto	u260
  1180     0587                     u261:
  1181     0587  2D79               	goto	l879
  1182     0588                     u260:
  1183     0588                     l885:
  1184     0588  3001               	movlw	1
  1185     0589                     u275:
  1186     0589  1003               	clrc
  1187     058A  0DFA               	rlf	___lwdiv@quotient,f
  1188     058B  0DFB               	rlf	___lwdiv@quotient+1,f
  1189     058C  3EFF               	addlw	-1
  1190     058D  1D03               	skipz
  1191     058E  2D89               	goto	u275
  1192     058F  0877               	movf	___lwdiv@divisor+1,w
  1193     0590  0279               	subwf	___lwdiv@dividend+1,w
  1194     0591  1D03               	skipz
  1195     0592  2D95               	goto	u285
  1196     0593  0876               	movf	___lwdiv@divisor,w
  1197     0594  0278               	subwf	___lwdiv@dividend,w
  1198     0595                     u285:
  1199     0595  1C03               	skipc
  1200     0596  2D98               	goto	u281
  1201     0597  2D99               	goto	u280
  1202     0598                     u281:
  1203     0598  2DA0               	goto	l891
  1204     0599                     u280:
  1205     0599                     l887:
  1206     0599  0876               	movf	___lwdiv@divisor,w
  1207     059A  02F8               	subwf	___lwdiv@dividend,f
  1208     059B  0877               	movf	___lwdiv@divisor+1,w
  1209     059C  1C03               	skipc
  1210     059D  03F9               	decf	___lwdiv@dividend+1,f
  1211     059E  02F9               	subwf	___lwdiv@dividend+1,f
  1212     059F                     l889:
  1213     059F  147A               	bsf	___lwdiv@quotient,0
  1214     05A0                     l891:
  1215     05A0  3001               	movlw	1
  1216     05A1                     u295:
  1217     05A1  1003               	clrc
  1218     05A2  0CF7               	rrf	___lwdiv@divisor+1,f
  1219     05A3  0CF6               	rrf	___lwdiv@divisor,f
  1220     05A4  3EFF               	addlw	-1
  1221     05A5  1D03               	skipz
  1222     05A6  2DA1               	goto	u295
  1223     05A7                     l893:
  1224     05A7  3001               	movlw	1
  1225     05A8  02FC               	subwf	___lwdiv@counter,f
  1226     05A9  1D03               	btfss	3,2
  1227     05AA  2DAC               	goto	u301
  1228     05AB  2DAD               	goto	u300
  1229     05AC                     u301:
  1230     05AC  2D88               	goto	l885
  1231     05AD                     u300:
  1232     05AD                     l895:
  1233     05AD  087B               	movf	___lwdiv@quotient+1,w
  1234     05AE  00F7               	movwf	?___lwdiv+1
  1235     05AF  087A               	movf	___lwdiv@quotient,w
  1236     05B0  00F6               	movwf	?___lwdiv
  1237     05B1                     l443:
  1238     05B1  0008               	return
  1239     05B2                     __end_of___lwdiv:
  1240                           
  1241                           	psect	text5
  1242     04FF                     __ptext5:	
  1243 ;; *************** function ___bmul *****************
  1244 ;; Defined at:
  1245 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  multiplier      1    wreg     unsigned char 
  1248 ;;  multiplicand    1    0[COMMON] unsigned char 
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;  multiplier      1    2[COMMON] unsigned char 
  1251 ;;  product         1    1[COMMON] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      unsigned char 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0, btemp+1
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         1       0       0       0       0
  1262 ;;      Locals:         2       0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0
  1264 ;;      Totals:         3       0       0       0       0
  1265 ;;Total ram usage:        3 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_LCD_output
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274     04FF                     ___bmul:	
  1275                           ;psect for function ___bmul
  1276                           
  1277                           
  1278                           ;incstack = 0
  1279                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1280                           ;___bmul@multiplier stored from wreg
  1281     04FF  00F2               	movwf	___bmul@multiplier
  1282     0500                     l857:
  1283     0500  01F1               	clrf	___bmul@product
  1284     0501                     l859:
  1285     0501  1C72               	btfss	___bmul@multiplier,0
  1286     0502  2D04               	goto	u221
  1287     0503  2D05               	goto	u220
  1288     0504                     u221:
  1289     0504  2D09               	goto	l863
  1290     0505                     u220:
  1291     0505                     l861:
  1292     0505  0870               	movf	___bmul@multiplicand,w
  1293     0506  00FF               	movwf	btemp+1
  1294     0507  087F               	movf	btemp+1,w
  1295     0508  07F1               	addwf	___bmul@product,f
  1296     0509                     l863:
  1297     0509  1003               	clrc
  1298     050A  0DF0               	rlf	___bmul@multiplicand,f
  1299     050B                     l865:
  1300     050B  1003               	clrc
  1301     050C  0CF2               	rrf	___bmul@multiplier,f
  1302     050D                     l867:
  1303     050D  0872               	movf	___bmul@multiplier,w
  1304     050E  1D03               	btfss	3,2
  1305     050F  2D11               	goto	u231
  1306     0510  2D12               	goto	u230
  1307     0511                     u231:
  1308     0511  2D01               	goto	l859
  1309     0512                     u230:
  1310     0512                     l869:
  1311     0512  0871               	movf	___bmul@product,w
  1312     0513                     l189:
  1313     0513  0008               	return
  1314     0514                     __end_of___bmul:
  1315                           
  1316                           	psect	text6
  1317     04EB                     __ptext6:	
  1318 ;; *************** function _LCD_data *****************
  1319 ;; Defined at:
  1320 ;;		line 137 in file "LCD_SWITCH_week4.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  hex             1    wreg     unsigned char 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  hex             1    2[COMMON] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0, btemp+1
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1334 ;;      Params:         0       0       0       0       0
  1335 ;;      Locals:         1       0       0       0       0
  1336 ;;      Temps:          2       0       0       0       0
  1337 ;;      Totals:         3       0       0       0       0
  1338 ;;Total ram usage:        3 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_keyscane
  1344 ;;		_LCD_output
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348     04EB                     _LCD_data:	
  1349                           ;psect for function _LCD_data
  1350                           
  1351                           
  1352                           ;incstack = 0
  1353                           ; Regs used in _LCD_data: [wreg+status,2+status,0+btemp+1]
  1354                           ;LCD_data@hex stored from wreg
  1355     04EB  00F2               	movwf	LCD_data@hex
  1356     04EC                     l833:
  1357                           
  1358                           ;LCD_SWITCH_week4.c: 138:     PORTC |= 0x08;
  1359     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1360     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1361     04EE  1587               	bsf	7,3	;volatile
  1362     04EF                     l835:
  1363                           
  1364                           ;LCD_SWITCH_week4.c: 139:     PORTD = hex;
  1365     04EF  0872               	movf	LCD_data@hex,w
  1366     04F0  0088               	movwf	8	;volatile
  1367     04F1                     l837:
  1368                           
  1369                           ;LCD_SWITCH_week4.c: 140:     PORTC |= 0x01;
  1370     04F1  1407               	bsf	7,0	;volatile
  1371     04F2                     l839:
  1372                           
  1373                           ;LCD_SWITCH_week4.c: 141:     PORTC &= ~0x01;
  1374     04F2  30FE               	movlw	254
  1375     04F3  00FF               	movwf	btemp+1
  1376     04F4  087F               	movf	btemp+1,w
  1377     04F5  0587               	andwf	7,f	;volatile
  1378     04F6                     l841:
  1379                           
  1380                           ;LCD_SWITCH_week4.c: 142:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1381     04F6  30C3               	movlw	195
  1382     04F7  00F1               	movwf	??_LCD_data+1
  1383     04F8  30CD               	movlw	205
  1384     04F9  00F0               	movwf	??_LCD_data
  1385     04FA                     u357:
  1386     04FA  0BF0               	decfsz	??_LCD_data,f
  1387     04FB  2CFA               	goto	u357
  1388     04FC  0BF1               	decfsz	??_LCD_data+1,f
  1389     04FD  2CFA               	goto	u357
  1390     04FE                     l77:
  1391     04FE  0008               	return
  1392     04FF                     __end_of_LCD_data:
  1393                           
  1394                           	psect	text7
  1395     05B2                     __ptext7:	
  1396 ;; *************** function _LCD_PIC_init *****************
  1397 ;; Defined at:
  1398 ;;		line 99 in file "LCD_SWITCH_week4.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0
  1414 ;;      Temps:          2       0       0       0       0
  1415 ;;      Totals:         2       0       0       0       0
  1416 ;;Total ram usage:        2 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 1
  1419 ;; This function calls:
  1420 ;;		_LCD_command
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426     05B2                     _LCD_PIC_init:	
  1427                           ;psect for function _LCD_PIC_init
  1428                           
  1429     05B2                     l901:	
  1430                           ;incstack = 0
  1431                           ; Regs used in _LCD_PIC_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1432                           
  1433                           
  1434                           ;LCD_SWITCH_week4.c: 101:     TRISB = 0xF0;
  1435     05B2  30F0               	movlw	240
  1436     05B3  1683               	bsf	3,5	;RP0=1, select bank1
  1437     05B4  1303               	bcf	3,6	;RP1=0, select bank1
  1438     05B5  0086               	movwf	6	;volatile
  1439     05B6                     l903:
  1440                           
  1441                           ;LCD_SWITCH_week4.c: 102:     TRISC = 0x00;
  1442     05B6  0187               	clrf	7	;volatile
  1443     05B7                     l905:
  1444                           
  1445                           ;LCD_SWITCH_week4.c: 103:     TRISD = 0x00;
  1446     05B7  0188               	clrf	8	;volatile
  1447     05B8                     l907:
  1448                           
  1449                           ;LCD_SWITCH_week4.c: 106:     LCD_command(0x30);
  1450     05B8  3030               	movlw	48
  1451     05B9  120A  118A  2514  120A  118A  	fcall	_LCD_command
  1452     05BE                     l909:
  1453                           
  1454                           ;LCD_SWITCH_week4.c: 107:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1455     05BE  30C3               	movlw	195
  1456     05BF  00F4               	movwf	??_LCD_PIC_init+1
  1457     05C0  30CD               	movlw	205
  1458     05C1  00F3               	movwf	??_LCD_PIC_init
  1459     05C2                     u367:
  1460     05C2  0BF3               	decfsz	??_LCD_PIC_init,f
  1461     05C3  2DC2               	goto	u367
  1462     05C4  0BF4               	decfsz	??_LCD_PIC_init+1,f
  1463     05C5  2DC2               	goto	u367
  1464                           
  1465                           ;LCD_SWITCH_week4.c: 108:     LCD_command(0x30);
  1466     05C6  3030               	movlw	48
  1467     05C7  120A  118A  2514  120A  118A  	fcall	_LCD_command
  1468     05CC                     l911:
  1469                           
  1470                           ;LCD_SWITCH_week4.c: 109:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1471     05CC  30C3               	movlw	195
  1472     05CD  00F4               	movwf	??_LCD_PIC_init+1
  1473     05CE  30CD               	movlw	205
  1474     05CF  00F3               	movwf	??_LCD_PIC_init
  1475     05D0                     u377:
  1476     05D0  0BF3               	decfsz	??_LCD_PIC_init,f
  1477     05D1  2DD0               	goto	u377
  1478     05D2  0BF4               	decfsz	??_LCD_PIC_init+1,f
  1479     05D3  2DD0               	goto	u377
  1480     05D4                     l913:
  1481                           
  1482                           ;LCD_SWITCH_week4.c: 110:     LCD_command(0x30);
  1483     05D4  3030               	movlw	48
  1484     05D5  120A  118A  2514  120A  118A  	fcall	_LCD_command
  1485                           
  1486                           ;LCD_SWITCH_week4.c: 111:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1487     05DA  30C3               	movlw	195
  1488     05DB  00F4               	movwf	??_LCD_PIC_init+1
  1489     05DC  30CD               	movlw	205
  1490     05DD  00F3               	movwf	??_LCD_PIC_init
  1491     05DE                     u387:
  1492     05DE  0BF3               	decfsz	??_LCD_PIC_init,f
  1493     05DF  2DDE               	goto	u387
  1494     05E0  0BF4               	decfsz	??_LCD_PIC_init+1,f
  1495     05E1  2DDE               	goto	u387
  1496     05E2                     l915:
  1497                           
  1498                           ;LCD_SWITCH_week4.c: 112:     LCD_command(0x38);
  1499     05E2  3038               	movlw	56
  1500     05E3  120A  118A  2514  120A  118A  	fcall	_LCD_command
  1501     05E8                     l917:
  1502                           
  1503                           ;LCD_SWITCH_week4.c: 113:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1504     05E8  30C3               	movlw	195
  1505     05E9  00F4               	movwf	??_LCD_PIC_init+1
  1506     05EA  30CD               	movlw	205
  1507     05EB  00F3               	movwf	??_LCD_PIC_init
  1508     05EC                     u397:
  1509     05EC  0BF3               	decfsz	??_LCD_PIC_init,f
  1510     05ED  2DEC               	goto	u397
  1511     05EE  0BF4               	decfsz	??_LCD_PIC_init+1,f
  1512     05EF  2DEC               	goto	u397
  1513                           
  1514                           ;LCD_SWITCH_week4.c: 114:     LCD_command(0x08);
  1515     05F0  3008               	movlw	8
  1516     05F1  120A  118A  2514  120A  118A  	fcall	_LCD_command
  1517     05F6                     l919:
  1518                           
  1519                           ;LCD_SWITCH_week4.c: 115:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1520     05F6  30C3               	movlw	195
  1521     05F7  00F4               	movwf	??_LCD_PIC_init+1
  1522     05F8  30CD               	movlw	205
  1523     05F9  00F3               	movwf	??_LCD_PIC_init
  1524     05FA                     u407:
  1525     05FA  0BF3               	decfsz	??_LCD_PIC_init,f
  1526     05FB  2DFA               	goto	u407
  1527     05FC  0BF4               	decfsz	??_LCD_PIC_init+1,f
  1528     05FD  2DFA               	goto	u407
  1529     05FE                     l921:
  1530                           
  1531                           ;LCD_SWITCH_week4.c: 116:     LCD_command(0x01);
  1532     05FE  3001               	movlw	1
  1533     05FF  120A  118A  2514  120A  118A  	fcall	_LCD_command
  1534                           
  1535                           ;LCD_SWITCH_week4.c: 117:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1536     0604  30C3               	movlw	195
  1537     0605  00F4               	movwf	??_LCD_PIC_init+1
  1538     0606  30CD               	movlw	205
  1539     0607  00F3               	movwf	??_LCD_PIC_init
  1540     0608                     u417:
  1541     0608  0BF3               	decfsz	??_LCD_PIC_init,f
  1542     0609  2E08               	goto	u417
  1543     060A  0BF4               	decfsz	??_LCD_PIC_init+1,f
  1544     060B  2E08               	goto	u417
  1545     060C                     l923:
  1546                           
  1547                           ;LCD_SWITCH_week4.c: 118:     LCD_command(0x06);
  1548     060C  3006               	movlw	6
  1549     060D  120A  118A  2514  120A  118A  	fcall	_LCD_command
  1550     0612                     l925:
  1551                           
  1552                           ;LCD_SWITCH_week4.c: 119:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1553     0612  30C3               	movlw	195
  1554     0613  00F4               	movwf	??_LCD_PIC_init+1
  1555     0614  30CD               	movlw	205
  1556     0615  00F3               	movwf	??_LCD_PIC_init
  1557     0616                     u427:
  1558     0616  0BF3               	decfsz	??_LCD_PIC_init,f
  1559     0617  2E16               	goto	u427
  1560     0618  0BF4               	decfsz	??_LCD_PIC_init+1,f
  1561     0619  2E16               	goto	u427
  1562                           
  1563                           ;LCD_SWITCH_week4.c: 120:     LCD_command(0x0E);
  1564     061A  300E               	movlw	14
  1565     061B  120A  118A  2514  120A  118A  	fcall	_LCD_command
  1566     0620                     l927:
  1567                           
  1568                           ;LCD_SWITCH_week4.c: 121:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1569     0620  30C3               	movlw	195
  1570     0621  00F4               	movwf	??_LCD_PIC_init+1
  1571     0622  30CD               	movlw	205
  1572     0623  00F3               	movwf	??_LCD_PIC_init
  1573     0624                     u437:
  1574     0624  0BF3               	decfsz	??_LCD_PIC_init,f
  1575     0625  2E24               	goto	u437
  1576     0626  0BF4               	decfsz	??_LCD_PIC_init+1,f
  1577     0627  2E24               	goto	u437
  1578     0628                     l71:
  1579     0628  0008               	return
  1580     0629                     __end_of_LCD_PIC_init:
  1581                           
  1582                           	psect	text8
  1583     0514                     __ptext8:	
  1584 ;; *************** function _LCD_command *****************
  1585 ;; Defined at:
  1586 ;;		line 126 in file "LCD_SWITCH_week4.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  hex             1    wreg     unsigned char 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  hex             1    2[COMMON] unsigned char 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0, btemp+1
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1600 ;;      Params:         0       0       0       0       0
  1601 ;;      Locals:         1       0       0       0       0
  1602 ;;      Temps:          2       0       0       0       0
  1603 ;;      Totals:         3       0       0       0       0
  1604 ;;Total ram usage:        3 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_keyscane
  1610 ;;		_LCD_output
  1611 ;;		_LCD_PIC_init
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615     0514                     _LCD_command:	
  1616                           ;psect for function _LCD_command
  1617                           
  1618                           
  1619                           ;incstack = 0
  1620                           ; Regs used in _LCD_command: [wreg+status,2+status,0+btemp+1]
  1621                           ;LCD_command@hex stored from wreg
  1622     0514  00F2               	movwf	LCD_command@hex
  1623     0515                     l825:
  1624                           
  1625                           ;LCD_SWITCH_week4.c: 127:     PORTC &= 0xF7;
  1626     0515  30F7               	movlw	247
  1627     0516  00FF               	movwf	btemp+1
  1628     0517  087F               	movf	btemp+1,w
  1629     0518  1283               	bcf	3,5	;RP0=0, select bank0
  1630     0519  1303               	bcf	3,6	;RP1=0, select bank0
  1631     051A  0587               	andwf	7,f	;volatile
  1632     051B                     l827:
  1633                           
  1634                           ;LCD_SWITCH_week4.c: 128:     PORTD = hex;
  1635     051B  0872               	movf	LCD_command@hex,w
  1636     051C  0088               	movwf	8	;volatile
  1637     051D                     l829:
  1638                           
  1639                           ;LCD_SWITCH_week4.c: 129:     PORTC |= 0x01;
  1640     051D  1407               	bsf	7,0	;volatile
  1641     051E                     l831:
  1642                           
  1643                           ;LCD_SWITCH_week4.c: 130:     PORTC &= ~0x01;
  1644     051E  30FE               	movlw	254
  1645     051F  00FF               	movwf	btemp+1
  1646     0520  087F               	movf	btemp+1,w
  1647     0521  0587               	andwf	7,f	;volatile
  1648                           
  1649                           ;LCD_SWITCH_week4.c: 131:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1650     0522  30C3               	movlw	195
  1651     0523  00F1               	movwf	??_LCD_command+1
  1652     0524  30CD               	movlw	205
  1653     0525  00F0               	movwf	??_LCD_command
  1654     0526                     u447:
  1655     0526  0BF0               	decfsz	??_LCD_command,f
  1656     0527  2D26               	goto	u447
  1657     0528  0BF1               	decfsz	??_LCD_command+1,f
  1658     0529  2D26               	goto	u447
  1659     052A                     l74:
  1660     052A  0008               	return
  1661     052B                     __end_of_LCD_command:
  1662     007E                     btemp	set	126	;btemp
  1663     007E                     wtemp0	set	126
  1664                           
  1665                           	psect	config
  1666                           
  1667                           ;Config register CONFIG @ 0x2007
  1668                           ;	Oscillator Selection bits
  1669                           ;	FOSC = EXTRC, RC oscillator
  1670                           ;	Watchdog Timer Enable bit
  1671                           ;	WDTE = OFF, WDT disabled
  1672                           ;	Power-up Timer Enable bit
  1673                           ;	PWRTE = OFF, PWRT disabled
  1674                           ;	Brown-out Reset Enable bit
  1675                           ;	BOREN = OFF, BOR disabled
  1676                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1677                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1678                           ;	Data EEPROM Memory Code Protection bit
  1679                           ;	CPD = OFF, Data EEPROM code protection off
  1680                           ;	Flash Program Memory Write Enable bits
  1681                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1682                           ;	In-Circuit Debugger Mode bit
  1683                           ;	DEBUG = 0x1, unprogrammed default
  1684                           ;	Flash Program Memory Code Protection bit
  1685                           ;	CP = OFF, Code protection off
  1686     2007                     	org	8199
  1687     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     10      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LCD_output->___lwdiv
    ___lwdiv->___wmul
    _LCD_PIC_init->_LCD_command

Critical Paths under _main in BANK0

    _main->_keyscane
    _keyscane->_LCD_output

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1988
                       _LCD_PIC_init
                           _keyscane
 ---------------------------------------------------------------------------------
 (1) _keyscane                                             2     2      0    1966
                                              8 BANK0      2     2      0
                        _LCD_command
                           _LCD_data
                         _LCD_output
 ---------------------------------------------------------------------------------
 (2) _LCD_output                                           8     6      2    1922
                                              0 BANK0      8     6      2
                        _LCD_command
                           _LCD_data
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     320
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _LCD_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_PIC_init                                         2     2      0      22
                                              3 COMMON     2     2      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _LCD_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_PIC_init
     _LCD_command
   _keyscane
     _LCD_command
     _LCD_data
     _LCD_output
       _LCD_command
       _LCD_data
       ___bmul
       ___lwdiv
         ___wmul (ARG)
       ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      36       5       67.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      43      12        0.0%
ABS                  0      0      43       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Jan 02 22:00:10 2024

                      _i 003E                        _j 0040                        _x 004B  
                      pc 0002           ___bmul@product 0071                       l71 0628  
                     l65 06F4                       l74 052A                       l68 07DF  
                     l77 04FE                       _d1 0042                       _d2 0044  
                     _d3 0046                       _d4 0048                       fsr 0004  
    ___wmul@multiplicand 0072                      l163 0555                      l165 056D  
                    l443 05B1                      l189 0513                      l901 05B2  
                    l831 051E                      l911 05CC                      l903 05B6  
                    l825 0515                      l921 05FE                      l913 05D4  
                    l905 05B7                      l841 04F6                      l833 04EC  
                    l827 051B                      l923 060C                      l915 05E2  
                    l907 05B8                      l835 04EF                      l851 0563  
                    l843 0549                      l931 062F                      l829 051D  
                    l925 0612                      l917 05E8                      l909 05BE  
                    l837 04F1                      l861 0505                      l853 0569  
                    l845 054B                      l941 0642                      l933 0635  
                    l927 0620                      l919 05F6                      l839 04F2  
                    l863 0509                      l847 054F                      l943 0648  
                    l865 050B                      l857 0500                      l881 0580  
                    l873 056E                      l849 055C                      l961 0680  
                    l953 0658                      l945 064E                      l929 0629  
                    l867 050D                      l859 0501                      l891 05A0  
                    l883 0584                      l875 0570                      l971 06AD  
                    l963 0686                      l955 0662                      l947 0654  
                    l939 0638                      l869 0512                      l893 05A7  
                    l885 0588                      l877 0576                      l981 06CD  
                    l973 06B3                      l965 068C                      l957 0668  
                    l887 0599                      l879 0579                      l895 05AD  
                    l983 06D3                      l975 06BE                      l967 06A2  
                    l959 066E                      l889 059F                      l977 06C6  
                    l969 06A7                      l993 04CA                      l899 06F5  
                    l979 06CB                      l987 06DE                      l995 04CF  
                    u210 0569                      u211 0568                      u220 0505  
                    u300 05AD                      u221 0504                      u301 05AC  
                    u205 055D                      u230 0512                      u310 064E  
                    u231 0511                      u311 064D                      u240 0576  
                    u320 066E                      u241 0575                      u321 066D  
                    u330 06A2                      u331 06A1                      u260 0588  
                    u180 054F                      u340 06C6                      u261 0587  
                    u181 054E                      u341 06C5                      u407 05FA  
                    u255 057A                      u280 0599                      u417 0608  
                    u281 0598                      u427 0616                      u275 0589  
                    u195 0556                      u437 0624                      u357 04FA  
                    u285 0595                      u447 0526                      u367 05C2  
                    u295 05A1                      u377 05D0                      u387 05DE  
                    u397 05EC                      fsr0 0004                      indf 0000  
            ?_LCD_output 004C                     l1017 06E6             ?_LCD_command 0070  
         ??_LCD_PIC_init 0073                     _main 04CA                     btemp 007E  
                   start 0000        ___bmul@multiplier 0072         __end_of_LCD_data 04FF  
                  ?_main 0070          __end_of___lwdiv 05B2                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _array 0020  
            LCD_data@hex 0072                    _value 004A                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E0  
           __end_of_main 04D8                   ??_main 007D              LCD_output@i 004C  
                 ___bmul 04FF                   ___wmul 0549                ??___lwdiv 007A  
       __end_of_keyscane 06F5     __end_of_LCD_PIC_init 0629  __end_of__initialization 07FC  
              ?_LCD_data 0070      ___bmul@multiplicand 0070           __pcstackCOMMON 0070  
           __pidataBANK0 052B             ??_LCD_output 004E               __pbssBANK0 003E  
             ??_LCD_data 0070               __pmaintext 04CA                  ?___bmul 0070  
                ?___wmul 0070       __end_of_LCD_output 07E0                ?_keyscane 0070  
                ___lwdiv 056E                  __ptext1 0629                  __ptext2 06F5  
                __ptext3 0549                  __ptext4 056E                  __ptext5 04FF  
                __ptext6 04EB                  __ptext7 05B2                  __ptext8 0514  
   end_of_initialization 07FC             _LCD_PIC_init 05B2               ??_keyscane 0054  
         __end_of___bmul 0514           __end_of___wmul 056E      start_initialization 07E0  
          ??_LCD_command 0070                 ??___bmul 0071                 ??___wmul 0074  
             init_fetch0 04D8              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 004C      __end_of_LCD_command 052B         ___lwdiv@dividend 0078  
               ?___lwdiv 0076         ___lwdiv@quotient 007A           ___wmul@product 0074  
               _LCD_data 04EB        ___wmul@multiplier 0070              _LCD_command 0514  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007C                 _keyscane 0629  
             _LCD_output 06F5                 init_ram0 04DC            ?_LCD_PIC_init 0070  
         LCD_command@hex 0072  
