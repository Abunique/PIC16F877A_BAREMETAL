

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 28 22:52:31 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172     06FE                     __pidataBANK0:
   173                           
   174                           ;initializer for _array
   175     06FE  3448               	retlw	72
   176     06FF  3465               	retlw	101
   177     0700  346C               	retlw	108
   178     0701  346C               	retlw	108
   179     0702  346F               	retlw	111
   180     0703  3400               	retlw	0
   181     0704  3400               	retlw	0
   182     0705  3400               	retlw	0
   183     0706  3400               	retlw	0
   184     0707  3400               	retlw	0
   185     0708  3400               	retlw	0
   186     0709  3400               	retlw	0
   187     070A  3400               	retlw	0
   188     070B  3400               	retlw	0
   189     070C  3400               	retlw	0
   190     0008                     _PORTD	set	8
   191     0038                     _RC0	set	56
   192     003B                     _RC3	set	59
   193     0088                     _TRISD	set	136
   194     0087                     _TRISC	set	135
   195                           
   196                           	psect	cinit
   197     07EE                     start_initialization:	
   198                           ; #config settings
   199                           
   200     07EE                     __initialization:
   201                           
   202                           ; Initialize objects allocated to BANK0
   203     07EE  1383               	bcf	3,7	;select IRP bank0
   204     07EF  302F               	movlw	low (__pdataBANK0+15)
   205     07F0  00FD               	movwf	btemp+-1
   206     07F1  3006               	movlw	high __pidataBANK0
   207     07F2  00FE               	movwf	btemp
   208     07F3  30FE               	movlw	low __pidataBANK0
   209     07F4  00FF               	movwf	btemp+1
   210     07F5  3020               	movlw	low __pdataBANK0
   211     07F6  0084               	movwf	4
   212     07F7  120A  118A  2733  120A  118A  	fcall	init_ram0
   213     07FC                     end_of_initialization:	
   214                           ;End of C runtime variable initialization code
   215                           
   216     07FC                     __end_of__initialization:
   217     07FC  0183               	clrf	3
   218     07FD  120A  118A  2F42   	ljmp	_main	;jump to C main() function
   219                           
   220                           	psect	dataBANK0
   221     0020                     __pdataBANK0:
   222     0020                     _array:
   223     0020                     	ds	15
   224                           
   225                           	psect	inittext
   226     072F                     init_fetch0:	
   227                           ;	Called with low address in FSR and high address in W
   228                           
   229     072F  087E               	movf	btemp,w
   230     0730  008A               	movwf	10
   231     0731  087F               	movf	btemp+1,w
   232     0732  0082               	movwf	2
   233     0733                     init_ram0:	
   234                           ;Called with:
   235                           ;	high address of idata address in btemp 
   236                           ;	low address of idata address in btemp+1 
   237                           ;	low address of data in FSR
   238                           ;	high address + 1 of data in btemp-1
   239                           
   240     0733  120A  118A  272F  120A  118A  	fcall	init_fetch0
   241     0738  0080               	movwf	0
   242     0739  0A84               	incf	4,f
   243     073A  0804               	movf	4,w
   244     073B  067D               	xorwf	btemp+-1,w
   245     073C  1903               	btfsc	3,2
   246     073D  3400               	retlw	0
   247     073E  0AFF               	incf	btemp+1,f
   248     073F  1903               	btfsc	3,2
   249     0740  0AFE               	incf	btemp,f
   250     0741  2F33               	goto	init_ram0
   251                           
   252                           	psect	cstackCOMMON
   253     0070                     __pcstackCOMMON:
   254     0070                     ?_init:
   255     0070                     ?_LCD_command:	
   256                           ; 1 bytes @ 0x0
   257                           
   258     0070                     ??_LCD_command:	
   259                           ; 1 bytes @ 0x0
   260                           
   261     0070                     ?_LCD_data:	
   262                           ; 1 bytes @ 0x0
   263                           
   264     0070                     ??_LCD_data:	
   265                           ; 1 bytes @ 0x0
   266                           
   267     0070                     ?_main:	
   268                           ; 1 bytes @ 0x0
   269                           
   270                           
   271                           ; 1 bytes @ 0x0
   272     0070                     	ds	2
   273     0072                     LCD_command@i:
   274     0072                     LCD_data@i:	
   275                           ; 1 bytes @ 0x2
   276                           
   277                           
   278                           ; 1 bytes @ 0x2
   279     0072                     	ds	1
   280     0073                     ??_init:
   281                           
   282                           ; 1 bytes @ 0x3
   283     0073                     	ds	2
   284     0075                     ??_main:
   285                           
   286                           ; 1 bytes @ 0x5
   287     0075                     	ds	2
   288     0077                     main@i:
   289                           
   290                           ; 2 bytes @ 0x7
   291     0077                     	ds	2
   292                           
   293                           	psect	maintext
   294     0742                     __pmaintext:	
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 32 in file "LCD_class3.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;  i               2    7[COMMON] int 
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   309 ;; Tracked objects:
   310 ;;		On entry : B00/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   314 ;;      Params:         0       0       0       0       0
   315 ;;      Locals:         2       0       0       0       0
   316 ;;      Temps:          2       0       0       0       0
   317 ;;      Totals:         4       0       0       0       0
   318 ;;Total ram usage:        4 bytes
   319 ;; Hardware stack levels required when called: 2
   320 ;; This function calls:
   321 ;;		_LCD_command
   322 ;;		_LCD_data
   323 ;;		_init
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329     0742                     _main:	
   330                           ;psect for function _main
   331                           
   332     0742                     l633:	
   333                           ;incstack = 0
   334                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   335                           
   336                           
   337                           ;LCD_class3.c: 34:     init();
   338     0742  120A  118A  2779  120A  118A  	fcall	_init
   339                           
   340                           ;LCD_class3.c: 35:     LCD_command(0x80);
   341     0747  3080               	movlw	128
   342     0748  120A  118A  271E  120A  118A  	fcall	_LCD_command
   343     074D                     l635:
   344                           
   345                           ;LCD_class3.c: 36:     for(int i=0;i<=4;i++){
   346     074D  01F7               	clrf	main@i
   347     074E  01F8               	clrf	main@i+1
   348     074F                     l641:
   349                           
   350                           ;LCD_class3.c: 37:         LCD_data(array[i]);
   351     074F  0877               	movf	main@i,w
   352     0750  3E20               	addlw	(low (_array| 0))& (0+255)
   353     0751  0084               	movwf	4
   354     0752  1383               	bcf	3,7	;select IRP bank0
   355     0753  0800               	movf	0,w
   356     0754  120A  118A  270D  120A  118A  	fcall	_LCD_data
   357     0759                     l643:
   358                           
   359                           ;LCD_class3.c: 38:         _delay((unsigned long)((50)*(6000000/4000.0)));
   360     0759  3062               	movlw	98
   361     075A  00F6               	movwf	??_main+1
   362     075B  3065               	movlw	101
   363     075C  00F5               	movwf	??_main
   364     075D                     u27:
   365     075D  0BF5               	decfsz	??_main,f
   366     075E  2F5D               	goto	u27
   367     075F  0BF6               	decfsz	??_main+1,f
   368     0760  2F5D               	goto	u27
   369     0761  2F62               	nop2
   370     0762                     l645:
   371                           
   372                           ;LCD_class3.c: 39:     }
   373     0762  3001               	movlw	1
   374     0763  07F7               	addwf	main@i,f
   375     0764  1803               	skipnc
   376     0765  0AF8               	incf	main@i+1,f
   377     0766  3000               	movlw	0
   378     0767  07F8               	addwf	main@i+1,f
   379     0768                     l647:
   380     0768  0878               	movf	main@i+1,w
   381     0769  3A80               	xorlw	128
   382     076A  00FF               	movwf	btemp+1
   383     076B  3080               	movlw	128
   384     076C  027F               	subwf	btemp+1,w
   385     076D  1D03               	skipz
   386     076E  2F71               	goto	u15
   387     076F  3005               	movlw	5
   388     0770  0277               	subwf	main@i,w
   389     0771                     u15:
   390     0771  1C03               	skipc
   391     0772  2F74               	goto	u11
   392     0773  2F75               	goto	u10
   393     0774                     u11:
   394     0774  2F4F               	goto	l641
   395     0775                     u10:
   396     0775                     l27:	
   397                           ;LCD_class3.c: 41:     while(1);
   398                           
   399     0775  2F75               	goto	l27
   400     0776  120A  118A  2800   	ljmp	start
   401     0779                     __end_of_main:
   402                           
   403                           	psect	text1
   404     0779                     __ptext1:	
   405 ;; *************** function _init *****************
   406 ;; Defined at:
   407 ;;		line 44 in file "LCD_class3.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0, pclath, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   421 ;;      Params:         0       0       0       0       0
   422 ;;      Locals:         0       0       0       0       0
   423 ;;      Temps:          2       0       0       0       0
   424 ;;      Totals:         2       0       0       0       0
   425 ;;Total ram usage:        2 bytes
   426 ;; Hardware stack levels used: 1
   427 ;; Hardware stack levels required when called: 1
   428 ;; This function calls:
   429 ;;		_LCD_command
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435     0779                     _init:	
   436                           ;psect for function _init
   437                           
   438     0779                     l591:	
   439                           ;incstack = 0
   440                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   441                           
   442                           
   443                           ;LCD_class3.c: 46:     TRISC = 0x00;
   444     0779  1683               	bsf	3,5	;RP0=1, select bank1
   445     077A  1303               	bcf	3,6	;RP1=0, select bank1
   446     077B  0187               	clrf	7	;volatile
   447                           
   448                           ;LCD_class3.c: 47:     TRISD = 0x00;
   449     077C  0188               	clrf	8	;volatile
   450     077D                     l593:
   451                           
   452                           ;LCD_class3.c: 48:     LCD_command(0x30);
   453     077D  3030               	movlw	48
   454     077E  120A  118A  271E  120A  118A  	fcall	_LCD_command
   455     0783                     l595:
   456                           
   457                           ;LCD_class3.c: 49:      _delay((unsigned long)((100)*(6000000/4000.0)));
   458     0783  30C3               	movlw	195
   459     0784  00F4               	movwf	??_init+1
   460     0785  30CD               	movlw	205
   461     0786  00F3               	movwf	??_init
   462     0787                     u37:
   463     0787  0BF3               	decfsz	??_init,f
   464     0788  2F87               	goto	u37
   465     0789  0BF4               	decfsz	??_init+1,f
   466     078A  2F87               	goto	u37
   467     078B                     l597:
   468                           
   469                           ;LCD_class3.c: 50:      LCD_command(0x30);
   470     078B  3030               	movlw	48
   471     078C  120A  118A  271E  120A  118A  	fcall	_LCD_command
   472     0791                     l599:
   473                           
   474                           ;LCD_class3.c: 51:      _delay((unsigned long)((100)*(6000000/4000.0)));
   475     0791  30C3               	movlw	195
   476     0792  00F4               	movwf	??_init+1
   477     0793  30CD               	movlw	205
   478     0794  00F3               	movwf	??_init
   479     0795                     u47:
   480     0795  0BF3               	decfsz	??_init,f
   481     0796  2F95               	goto	u47
   482     0797  0BF4               	decfsz	??_init+1,f
   483     0798  2F95               	goto	u47
   484     0799                     l601:
   485                           
   486                           ;LCD_class3.c: 52:      LCD_command(0x30);
   487     0799  3030               	movlw	48
   488     079A  120A  118A  271E  120A  118A  	fcall	_LCD_command
   489     079F                     l603:
   490                           
   491                           ;LCD_class3.c: 53:      _delay((unsigned long)((100)*(6000000/4000.0)));
   492     079F  30C3               	movlw	195
   493     07A0  00F4               	movwf	??_init+1
   494     07A1  30CD               	movlw	205
   495     07A2  00F3               	movwf	??_init
   496     07A3                     u57:
   497     07A3  0BF3               	decfsz	??_init,f
   498     07A4  2FA3               	goto	u57
   499     07A5  0BF4               	decfsz	??_init+1,f
   500     07A6  2FA3               	goto	u57
   501     07A7                     l605:
   502                           
   503                           ;LCD_class3.c: 54:      LCD_command(0x38);
   504     07A7  3038               	movlw	56
   505     07A8  120A  118A  271E  120A  118A  	fcall	_LCD_command
   506     07AD                     l607:
   507                           
   508                           ;LCD_class3.c: 57:      _delay((unsigned long)((100)*(6000000/4000.0)));
   509     07AD  30C3               	movlw	195
   510     07AE  00F4               	movwf	??_init+1
   511     07AF  30CD               	movlw	205
   512     07B0  00F3               	movwf	??_init
   513     07B1                     u67:
   514     07B1  0BF3               	decfsz	??_init,f
   515     07B2  2FB1               	goto	u67
   516     07B3  0BF4               	decfsz	??_init+1,f
   517     07B4  2FB1               	goto	u67
   518     07B5                     l609:
   519                           
   520                           ;LCD_class3.c: 59:   LCD_command(0x08);
   521     07B5  3008               	movlw	8
   522     07B6  120A  118A  271E  120A  118A  	fcall	_LCD_command
   523     07BB                     l611:
   524                           
   525                           ;LCD_class3.c: 60:      _delay((unsigned long)((100)*(6000000/4000.0)));
   526     07BB  30C3               	movlw	195
   527     07BC  00F4               	movwf	??_init+1
   528     07BD  30CD               	movlw	205
   529     07BE  00F3               	movwf	??_init
   530     07BF                     u77:
   531     07BF  0BF3               	decfsz	??_init,f
   532     07C0  2FBF               	goto	u77
   533     07C1  0BF4               	decfsz	??_init+1,f
   534     07C2  2FBF               	goto	u77
   535     07C3                     l613:
   536                           
   537                           ;LCD_class3.c: 61:   LCD_command(0x01);
   538     07C3  3001               	movlw	1
   539     07C4  120A  118A  271E  120A  118A  	fcall	_LCD_command
   540     07C9                     l615:
   541                           
   542                           ;LCD_class3.c: 62:      _delay((unsigned long)((100)*(6000000/4000.0)));
   543     07C9  30C3               	movlw	195
   544     07CA  00F4               	movwf	??_init+1
   545     07CB  30CD               	movlw	205
   546     07CC  00F3               	movwf	??_init
   547     07CD                     u87:
   548     07CD  0BF3               	decfsz	??_init,f
   549     07CE  2FCD               	goto	u87
   550     07CF  0BF4               	decfsz	??_init+1,f
   551     07D0  2FCD               	goto	u87
   552     07D1                     l617:
   553                           
   554                           ;LCD_class3.c: 63:      LCD_command(0x06);
   555     07D1  3006               	movlw	6
   556     07D2  120A  118A  271E  120A  118A  	fcall	_LCD_command
   557     07D7                     l619:
   558                           
   559                           ;LCD_class3.c: 64:      _delay((unsigned long)((100)*(6000000/4000.0)));
   560     07D7  30C3               	movlw	195
   561     07D8  00F4               	movwf	??_init+1
   562     07D9  30CD               	movlw	205
   563     07DA  00F3               	movwf	??_init
   564     07DB                     u97:
   565     07DB  0BF3               	decfsz	??_init,f
   566     07DC  2FDB               	goto	u97
   567     07DD  0BF4               	decfsz	??_init+1,f
   568     07DE  2FDB               	goto	u97
   569     07DF                     l621:
   570                           
   571                           ;LCD_class3.c: 65:       LCD_command(0x0E);
   572     07DF  300E               	movlw	14
   573     07E0  120A  118A  271E  120A  118A  	fcall	_LCD_command
   574     07E5                     l623:
   575                           
   576                           ;LCD_class3.c: 66:      _delay((unsigned long)((100)*(6000000/4000.0)));
   577     07E5  30C3               	movlw	195
   578     07E6  00F4               	movwf	??_init+1
   579     07E7  30CD               	movlw	205
   580     07E8  00F3               	movwf	??_init
   581     07E9                     u107:
   582     07E9  0BF3               	decfsz	??_init,f
   583     07EA  2FE9               	goto	u107
   584     07EB  0BF4               	decfsz	??_init+1,f
   585     07EC  2FE9               	goto	u107
   586     07ED                     l33:
   587     07ED  0008               	return
   588     07EE                     __end_of_init:
   589                           
   590                           	psect	text2
   591     071E                     __ptext2:	
   592 ;; *************** function _LCD_command *****************
   593 ;; Defined at:
   594 ;;		line 69 in file "LCD_class3.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  i               1    wreg     unsigned char 
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  i               1    2[COMMON] unsigned char 
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         1       0       0       0       0
   610 ;;      Temps:          2       0       0       0       0
   611 ;;      Totals:         3       0       0       0       0
   612 ;;Total ram usage:        3 bytes
   613 ;; Hardware stack levels used: 1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_main
   618 ;;		_init
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622     071E                     _LCD_command:	
   623                           ;psect for function _LCD_command
   624                           
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _LCD_command: [wreg]
   628                           ;LCD_command@i stored from wreg
   629     071E  00F2               	movwf	LCD_command@i
   630     071F                     l583:
   631                           
   632                           ;LCD_class3.c: 69: void LCD_command(unsigned char i);LCD_class3.c: 70: {;LCD_class3.c: 7
      +                          1:     RC3 = 0;
   633     071F  1283               	bcf	3,5	;RP0=0, select bank0
   634     0720  1303               	bcf	3,6	;RP1=0, select bank0
   635     0721  1187               	bcf	7,3	;volatile
   636     0722                     l585:
   637                           
   638                           ;LCD_class3.c: 72:     PORTD = i;
   639     0722  0872               	movf	LCD_command@i,w
   640     0723  0088               	movwf	8	;volatile
   641     0724                     l587:
   642                           
   643                           ;LCD_class3.c: 73:     RC0 = 1;
   644     0724  1407               	bsf	7,0	;volatile
   645     0725                     l589:
   646                           
   647                           ;LCD_class3.c: 74:     RC0= 0;
   648     0725  1007               	bcf	7,0	;volatile
   649                           
   650                           ;LCD_class3.c: 75:     _delay((unsigned long)((100)*(6000000/4000.0)));
   651     0726  30C3               	movlw	195
   652     0727  00F1               	movwf	??_LCD_command+1
   653     0728  30CD               	movlw	205
   654     0729  00F0               	movwf	??_LCD_command
   655     072A                     u117:
   656     072A  0BF0               	decfsz	??_LCD_command,f
   657     072B  2F2A               	goto	u117
   658     072C  0BF1               	decfsz	??_LCD_command+1,f
   659     072D  2F2A               	goto	u117
   660     072E                     l36:
   661     072E  0008               	return
   662     072F                     __end_of_LCD_command:
   663                           
   664                           	psect	text3
   665     070D                     __ptext3:	
   666 ;; *************** function _LCD_data *****************
   667 ;; Defined at:
   668 ;;		line 77 in file "LCD_class3.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  i               1    wreg     unsigned char 
   671 ;; Auto vars:     Size  Location     Type
   672 ;;  i               1    2[COMMON] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   682 ;;      Params:         0       0       0       0       0
   683 ;;      Locals:         1       0       0       0       0
   684 ;;      Temps:          2       0       0       0       0
   685 ;;      Totals:         3       0       0       0       0
   686 ;;Total ram usage:        3 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695     070D                     _LCD_data:	
   696                           ;psect for function _LCD_data
   697                           
   698                           
   699                           ;incstack = 0
   700                           ; Regs used in _LCD_data: [wreg]
   701                           ;LCD_data@i stored from wreg
   702     070D  00F2               	movwf	LCD_data@i
   703     070E                     l625:
   704                           
   705                           ;LCD_class3.c: 77: void LCD_data(unsigned char i);LCD_class3.c: 78: {;LCD_class3.c: 79: 
      +                              RC3 = 1;
   706     070E  1283               	bcf	3,5	;RP0=0, select bank0
   707     070F  1303               	bcf	3,6	;RP1=0, select bank0
   708     0710  1587               	bsf	7,3	;volatile
   709     0711                     l627:
   710                           
   711                           ;LCD_class3.c: 80:     PORTD = i;
   712     0711  0872               	movf	LCD_data@i,w
   713     0712  0088               	movwf	8	;volatile
   714     0713                     l629:
   715                           
   716                           ;LCD_class3.c: 81:     RC0 = 1;
   717     0713  1407               	bsf	7,0	;volatile
   718     0714                     l631:
   719                           
   720                           ;LCD_class3.c: 82:     RC0 = 0;
   721     0714  1007               	bcf	7,0	;volatile
   722                           
   723                           ;LCD_class3.c: 83:      _delay((unsigned long)((100)*(6000000/4000.0)));
   724     0715  30C3               	movlw	195
   725     0716  00F1               	movwf	??_LCD_data+1
   726     0717  30CD               	movlw	205
   727     0718  00F0               	movwf	??_LCD_data
   728     0719                     u127:
   729     0719  0BF0               	decfsz	??_LCD_data,f
   730     071A  2F19               	goto	u127
   731     071B  0BF1               	decfsz	??_LCD_data+1,f
   732     071C  2F19               	goto	u127
   733     071D                     l39:
   734     071D  0008               	return
   735     071E                     __end_of_LCD_data:
   736     007E                     btemp	set	126	;btemp
   737     007E                     wtemp0	set	126
   738                           
   739                           	psect	config
   740                           
   741                           ;Config register CONFIG @ 0x2007
   742                           ;	Oscillator Selection bits
   743                           ;	FOSC = EXTRC, RC oscillator
   744                           ;	Watchdog Timer Enable bit
   745                           ;	WDTE = OFF, WDT disabled
   746                           ;	Power-up Timer Enable bit
   747                           ;	PWRTE = OFF, PWRT disabled
   748                           ;	Brown-out Reset Enable bit
   749                           ;	BOREN = OFF, BOR disabled
   750                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   751                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   752                           ;	Data EEPROM Memory Code Protection bit
   753                           ;	CPD = OFF, Data EEPROM code protection off
   754                           ;	Flash Program Memory Write Enable bits
   755                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   756                           ;	In-Circuit Debugger Mode bit
   757                           ;	DEBUG = 0x1, unprogrammed default
   758                           ;	Flash Program Memory Code Protection bit
   759                           ;	CP = OFF, Code protection off
   760     2007                     	org	8199
   761     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init
    _init->_LCD_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      90
                                              5 COMMON     4     4      0
                        _LCD_command
                           _LCD_data
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      15
                                              3 COMMON     2     2      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_command
   _LCD_data
   _init
     _LCD_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       F       5       18.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      18      12        0.0%
ABS                  0      0      18       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 28 22:52:31 2023

                      pc 0002                       l33 07ED                       l27 0775  
                     l36 072E                       l39 071D                       u10 0775  
                     u11 0774                       u15 0771                       u27 075D  
                     u37 0787                       u47 0795                       u57 07A3  
                     u67 07B1                       u77 07BF                       u87 07CD  
                     u97 07DB                       fsr 0004                      l601 0799  
                    l611 07BB                      l603 079F                      l621 07DF  
                    l613 07C3                      l605 07A7                      l631 0714  
                    l623 07E5                      l615 07C9                      l607 07AD  
                    l625 070E                      l617 07D1                      l609 07B5  
                    l641 074F                      l633 0742                      l627 0711  
                    l619 07D7                      l643 0759                      l635 074D  
                    l629 0713                      l645 0762                      l583 071F  
                    l591 0779                      l647 0768                      l585 0722  
                    l593 077D                      l587 0724                      l595 0783  
                    l589 0725                      l597 078B                      l599 0791  
                    _RC0 0038                      _RC3 003B                      u107 07E9  
                    u117 072A                      u127 0719                      fsr0 0004  
                    indf 0000             ?_LCD_command 0070                     _main 0742  
                   _init 0779                     btemp 007E                     start 0000  
       __end_of_LCD_data 071E                    ?_main 0070                    ?_init 0070  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
                  _array 0020                    main@i 0077                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 0779             __end_of_init 07EE                   ??_main 0075  
                 ??_init 0073             LCD_command@i 0072  __end_of__initialization 07FC  
              ?_LCD_data 0070           __pcstackCOMMON 0070             __pidataBANK0 06FE  
              LCD_data@i 0072               ??_LCD_data 0070               __pmaintext 0742  
                __ptext1 0779                  __ptext2 071E                  __ptext3 070D  
   end_of_initialization 07FC      start_initialization 07EE            ??_LCD_command 0070  
             init_fetch0 072F              __pdataBANK0 0020                ___latbits 0002  
    __end_of_LCD_command 072F                 _LCD_data 070D              _LCD_command 071E  
               init_ram0 0733  
