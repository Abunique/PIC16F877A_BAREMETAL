

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Jan 16 08:15:17 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 22/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     010C                     	;# 
   110     010D                     	;# 
   111     010E                     	;# 
   112     010F                     	;# 
   113     018C                     	;# 
   114     018D                     	;# 
   115     0000                     	;# 
   116     0001                     	;# 
   117     0002                     	;# 
   118     0003                     	;# 
   119     0004                     	;# 
   120     0005                     	;# 
   121     0006                     	;# 
   122     0007                     	;# 
   123     0008                     	;# 
   124     0009                     	;# 
   125     000A                     	;# 
   126     000B                     	;# 
   127     000C                     	;# 
   128     000D                     	;# 
   129     000E                     	;# 
   130     000E                     	;# 
   131     000F                     	;# 
   132     0010                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0014                     	;# 
   137     0015                     	;# 
   138     0015                     	;# 
   139     0016                     	;# 
   140     0017                     	;# 
   141     0018                     	;# 
   142     0019                     	;# 
   143     001A                     	;# 
   144     001B                     	;# 
   145     001B                     	;# 
   146     001C                     	;# 
   147     001D                     	;# 
   148     001E                     	;# 
   149     001F                     	;# 
   150     0081                     	;# 
   151     0085                     	;# 
   152     0086                     	;# 
   153     0087                     	;# 
   154     0088                     	;# 
   155     0089                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     0091                     	;# 
   160     0092                     	;# 
   161     0093                     	;# 
   162     0094                     	;# 
   163     0098                     	;# 
   164     0099                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     009F                     	;# 
   169     010C                     	;# 
   170     010D                     	;# 
   171     010E                     	;# 
   172     010F                     	;# 
   173     018C                     	;# 
   174     018D                     	;# 
   175     0008                     _PORTD	set	8
   176     0007                     _PORTC	set	7
   177     001E                     _ADRESH	set	30
   178     001F                     _ADCON0	set	31
   179     0047                     _RD7	set	71
   180     009F                     _ADCON1	set	159
   181     0085                     _TRISA	set	133
   182     0088                     _TRISD	set	136
   183     0087                     _TRISC	set	135
   184     009E                     _ADRESL	set	158
   185                           
   186                           	psect	cinit
   187     07F3                     start_initialization:	
   188                           ; #config settings
   189                           
   190     07F3                     __initialization:
   191                           
   192                           ; Clear objects allocated to BANK0
   193     07F3  1383               	bcf	3,7	;select IRP bank0
   194     07F4  3020               	movlw	low __pbssBANK0
   195     07F5  0084               	movwf	4
   196     07F6  3034               	movlw	low (__pbssBANK0+20)
   197     07F7  120A  118A  2504  120A  118A  	fcall	clear_ram0
   198     07FC                     end_of_initialization:	
   199                           ;End of C runtime variable initialization code
   200                           
   201     07FC                     __end_of__initialization:
   202     07FC  0183               	clrf	3
   203     07FD  120A  118A  2F55   	ljmp	_main	;jump to C main() function
   204                           
   205                           	psect	bssBANK0
   206     0020                     __pbssBANK0:
   207     0020                     _num_arr:
   208     0020                     	ds	10
   209     002A                     _voltage:
   210     002A                     	ds	4
   211     002E                     _value:
   212     002E                     	ds	4
   213     0032                     _H_value:
   214     0032                     	ds	1
   215     0033                     _L_value:
   216     0033                     	ds	1
   217                           
   218                           	psect	clrtext
   219     0504                     clear_ram0:	
   220                           ;	Called with FSR containing the base address, and
   221                           ;	W with the last address+1
   222                           
   223     0504  0064               	clrwdt	;clear the watchdog before getting into this loop
   224     0505                     clrloop0:
   225     0505  0180               	clrf	0	;clear RAM location pointed to by FSR
   226     0506  0A84               	incf	4,f	;increment pointer
   227     0507  0604               	xorwf	4,w	;XOR with final address
   228     0508  1903               	btfsc	3,2	;have we reached the end yet?
   229     0509  3400               	retlw	0	;all done for this memory range, return
   230     050A  0604               	xorwf	4,w	;XOR again to restore value
   231     050B  2D05               	goto	clrloop0	;do the next byte
   232                           
   233                           	psect	cstackCOMMON
   234     0070                     __pcstackCOMMON:
   235     0070                     ?_ADC_LCD_PIC_init:
   236     0070                     ?_LCD_command:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ??_LCD_command:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ?_LCD_data:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ??_LCD_data:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     ?_main:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0070                     ?___lwdiv:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0070                     ?___lmul:	
   255                           ; 2 bytes @ 0x0
   256                           
   257     0070                     ___lwdiv@divisor:	
   258                           ; 4 bytes @ 0x0
   259                           
   260     0070                     ___lmul@multiplier:	
   261                           ; 2 bytes @ 0x0
   262                           
   263                           
   264                           ; 4 bytes @ 0x0
   265     0070                     	ds	2
   266     0072                     LCD_command@hex:
   267     0072                     LCD_data@hex:	
   268                           ; 1 bytes @ 0x2
   269                           
   270     0072                     ___lwdiv@dividend:	
   271                           ; 1 bytes @ 0x2
   272                           
   273                           
   274                           ; 2 bytes @ 0x2
   275     0072                     	ds	1
   276     0073                     ??_ADC_LCD_PIC_init:
   277                           
   278                           ; 1 bytes @ 0x3
   279     0073                     	ds	1
   280     0074                     ??___lwdiv:
   281     0074                     ___lwdiv@quotient:	
   282                           ; 1 bytes @ 0x4
   283                           
   284     0074                     ___lmul@multiplicand:	
   285                           ; 2 bytes @ 0x4
   286                           
   287                           
   288                           ; 4 bytes @ 0x4
   289     0074                     	ds	2
   290     0076                     ___lwdiv@counter:
   291                           
   292                           ; 1 bytes @ 0x6
   293     0076                     	ds	1
   294     0077                     ?___bmul:
   295     0077                     ___bmul@multiplicand:	
   296                           ; 1 bytes @ 0x7
   297                           
   298                           
   299                           ; 1 bytes @ 0x7
   300     0077                     	ds	1
   301     0078                     ??___lmul:
   302     0078                     ??___bmul:	
   303                           ; 1 bytes @ 0x8
   304                           
   305     0078                     ___bmul@product:	
   306                           ; 1 bytes @ 0x8
   307                           
   308                           
   309                           ; 1 bytes @ 0x8
   310     0078                     	ds	1
   311     0079                     ___bmul@multiplier:
   312     0079                     ___lmul@product:	
   313                           ; 1 bytes @ 0x9
   314                           
   315                           
   316                           ; 4 bytes @ 0x9
   317     0079                     	ds	1
   318     007A                     ?_LCD_output:
   319     007A                     LCD_output@n:	
   320                           ; 1 bytes @ 0xA
   321                           
   322                           
   323                           ; 2 bytes @ 0xA
   324     007A                     	ds	2
   325     007C                     ??_LCD_output:
   326                           
   327                           ; 1 bytes @ 0xC
   328     007C                     	ds	1
   329     007D                     ??___aldiv:
   330                           
   331                           ; 1 bytes @ 0xD
   332     007D                     	ds	1
   333                           
   334                           	psect	cstackBANK0
   335     0034                     __pcstackBANK0:
   336     0034                     ?___aldiv:
   337     0034                     LCD_output@result:	
   338                           ; 4 bytes @ 0x0
   339                           
   340     0034                     ___aldiv@divisor:	
   341                           ; 1 bytes @ 0x0
   342                           
   343                           
   344                           ; 4 bytes @ 0x0
   345     0034                     	ds	1
   346     0035                     LCD_output@j:
   347                           
   348                           ; 2 bytes @ 0x1
   349     0035                     	ds	2
   350     0037                     LCD_output@i:
   351                           
   352                           ; 1 bytes @ 0x3
   353     0037                     	ds	1
   354     0038                     ___aldiv@dividend:
   355                           
   356                           ; 4 bytes @ 0x4
   357     0038                     	ds	4
   358     003C                     ___aldiv@counter:
   359                           
   360                           ; 1 bytes @ 0x8
   361     003C                     	ds	1
   362     003D                     ___aldiv@sign:
   363                           
   364                           ; 1 bytes @ 0x9
   365     003D                     	ds	1
   366     003E                     ___aldiv@quotient:
   367                           
   368                           ; 4 bytes @ 0xA
   369     003E                     	ds	4
   370     0042                     ??_main:
   371                           
   372                           ; 1 bytes @ 0xE
   373     0042                     	ds	3
   374                           
   375                           	psect	maintext
   376     0755                     __pmaintext:	
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 35 in file "CLASS6_ADC.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : B00/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         0       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0
   398 ;;      Temps:          0       3       0       0       0
   399 ;;      Totals:         0       3       0       0       0
   400 ;;Total ram usage:        3 bytes
   401 ;; Hardware stack levels required when called: 2
   402 ;; This function calls:
   403 ;;		_ADC_LCD_PIC_init
   404 ;;		_LCD_command
   405 ;;		_LCD_data
   406 ;;		_LCD_output
   407 ;;		___aldiv
   408 ;;		___lmul
   409 ;; This function is called by:
   410 ;;		Startup code after reset
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414     0755                     _main:	
   415                           ;psect for function _main
   416                           
   417     0755                     l1003:	
   418                           ;incstack = 0
   419                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   420                           
   421                           
   422                           ;CLASS6_ADC.c: 36:     ADC_LCD_PIC_init();
   423     0755  120A  118A  2640  120A  118A  	fcall	_ADC_LCD_PIC_init
   424     075A                     l1005:
   425                           
   426                           ;CLASS6_ADC.c: 38:         ADCON0 |= 0x04;
   427     075A  1283               	bcf	3,5	;RP0=0, select bank0
   428     075B  1303               	bcf	3,6	;RP1=0, select bank0
   429     075C  151F               	bsf	31,2	;volatile
   430     075D                     l46:	
   431                           ;CLASS6_ADC.c: 39:         while (ADCON0 & 0x04);
   432                           
   433     075D  191F               	btfsc	31,2	;volatile
   434     075E  2F60               	goto	u651
   435     075F  2F61               	goto	u650
   436     0760                     u651:
   437     0760  2F5D               	goto	l46
   438     0761                     u650:
   439     0761                     l1007:
   440                           
   441                           ;CLASS6_ADC.c: 40:         L_value = ADRESL;
   442     0761  1683               	bsf	3,5	;RP0=1, select bank1
   443     0762  1303               	bcf	3,6	;RP1=0, select bank1
   444     0763  081E               	movf	30,w	;volatile
   445     0764  1283               	bcf	3,5	;RP0=0, select bank0
   446     0765  1303               	bcf	3,6	;RP1=0, select bank0
   447     0766  00B3               	movwf	_L_value
   448                           
   449                           ;CLASS6_ADC.c: 41:         H_value = ADRESH;
   450     0767  081E               	movf	30,w	;volatile
   451     0768  00B2               	movwf	_H_value
   452     0769                     l1009:
   453                           
   454                           ;CLASS6_ADC.c: 42:         value = ((unsigned int) H_value << 8)+(unsigned int) L_value;
   455     0769  0832               	movf	_H_value,w
   456     076A  00C2               	movwf	??_main
   457     076B  01C3               	clrf	??_main+1
   458     076C  0842               	movf	??_main,w
   459     076D  00C3               	movwf	??_main+1
   460     076E  01C2               	clrf	??_main
   461     076F  0833               	movf	_L_value,w
   462     0770  0742               	addwf	??_main,w
   463     0771  00AE               	movwf	_value
   464     0772  3000               	movlw	0
   465     0773  1803               	skipnc
   466     0774  3001               	movlw	1
   467     0775  0743               	addwf	??_main+1,w
   468     0776  00AF               	movwf	_value+1
   469     0777  01B0               	clrf	_value+2
   470     0778  01B1               	clrf	_value+3
   471     0779                     l1011:
   472                           
   473                           ;CLASS6_ADC.c: 43:         voltage = value * 48 / 1023;
   474     0779  3000               	movlw	0
   475     077A  00B7               	movwf	___aldiv@divisor+3
   476     077B  3000               	movlw	0
   477     077C  00B6               	movwf	___aldiv@divisor+2
   478     077D  3003               	movlw	3
   479     077E  00B5               	movwf	___aldiv@divisor+1
   480     077F  30FF               	movlw	255
   481     0780  00B4               	movwf	___aldiv@divisor
   482     0781  0831               	movf	_value+3,w
   483     0782  00F3               	movwf	___lmul@multiplier+3
   484     0783  0830               	movf	_value+2,w
   485     0784  00F2               	movwf	___lmul@multiplier+2
   486     0785  082F               	movf	_value+1,w
   487     0786  00F1               	movwf	___lmul@multiplier+1
   488     0787  082E               	movf	_value,w
   489     0788  00F0               	movwf	___lmul@multiplier
   490     0789  3000               	movlw	0
   491     078A  00F7               	movwf	___lmul@multiplicand+3
   492     078B  3000               	movlw	0
   493     078C  00F6               	movwf	___lmul@multiplicand+2
   494     078D  3000               	movlw	0
   495     078E  00F5               	movwf	___lmul@multiplicand+1
   496     078F  3030               	movlw	48
   497     0790  00F4               	movwf	___lmul@multiplicand
   498     0791  120A  118A  2592  120A  118A  	fcall	___lmul
   499     0796  0873               	movf	?___lmul+3,w
   500     0797  1283               	bcf	3,5	;RP0=0, select bank0
   501     0798  1303               	bcf	3,6	;RP1=0, select bank0
   502     0799  00BB               	movwf	___aldiv@dividend+3
   503     079A  0872               	movf	?___lmul+2,w
   504     079B  00BA               	movwf	___aldiv@dividend+2
   505     079C  0871               	movf	?___lmul+1,w
   506     079D  00B9               	movwf	___aldiv@dividend+1
   507     079E  0870               	movf	?___lmul,w
   508     079F  00B8               	movwf	___aldiv@dividend
   509     07A0  120A  118A  26B8  120A  118A  	fcall	___aldiv
   510     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   511     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   512     07A7  0837               	movf	?___aldiv+3,w
   513     07A8  00AD               	movwf	_voltage+3
   514     07A9  0836               	movf	?___aldiv+2,w
   515     07AA  00AC               	movwf	_voltage+2
   516     07AB  0835               	movf	?___aldiv+1,w
   517     07AC  00AB               	movwf	_voltage+1
   518     07AD  0834               	movf	?___aldiv,w
   519     07AE  00AA               	movwf	_voltage
   520     07AF                     l1013:
   521                           
   522                           ;CLASS6_ADC.c: 44:         LCD_command(0X80);
   523     07AF  3080               	movlw	128
   524     07B0  120A  118A  2536  120A  118A  	fcall	_LCD_command
   525     07B5                     l1015:
   526                           
   527                           ;CLASS6_ADC.c: 45:         if (voltage == 0)LCD_data(0x30);
   528     07B5  1283               	bcf	3,5	;RP0=0, select bank0
   529     07B6  1303               	bcf	3,6	;RP1=0, select bank0
   530     07B7  082D               	movf	_voltage+3,w
   531     07B8  042C               	iorwf	_voltage+2,w
   532     07B9  042B               	iorwf	_voltage+1,w
   533     07BA  042A               	iorwf	_voltage,w
   534     07BB  1D03               	skipz
   535     07BC  2FBE               	goto	u661
   536     07BD  2FBF               	goto	u660
   537     07BE                     u661:
   538     07BE  2FC6               	goto	l1019
   539     07BF                     u660:
   540     07BF                     l1017:
   541     07BF  3030               	movlw	48
   542     07C0  120A  118A  250C  120A  118A  	fcall	_LCD_data
   543     07C5  2FCF               	goto	l1021
   544     07C6                     l1019:
   545     07C6  082B               	movf	_voltage+1,w
   546     07C7  00FB               	movwf	LCD_output@n+1
   547     07C8  082A               	movf	_voltage,w
   548     07C9  00FA               	movwf	LCD_output@n
   549     07CA  120A  118A  25D8  120A  118A  	fcall	_LCD_output
   550     07CF                     l1021:
   551                           
   552                           ;CLASS6_ADC.c: 47:         LCD_data(0x56);
   553     07CF  3056               	movlw	86
   554     07D0  120A  118A  250C  120A  118A  	fcall	_LCD_data
   555     07D5                     l1023:
   556                           
   557                           ;CLASS6_ADC.c: 48:         LCD_data(0x20);
   558     07D5  3020               	movlw	32
   559     07D6  120A  118A  250C  120A  118A  	fcall	_LCD_data
   560     07DB                     l1025:
   561                           
   562                           ;CLASS6_ADC.c: 49:         LCD_data(0x20);
   563     07DB  3020               	movlw	32
   564     07DC  120A  118A  250C  120A  118A  	fcall	_LCD_data
   565     07E1                     l1027:
   566                           
   567                           ;CLASS6_ADC.c: 50:         _delay((unsigned long)((1000)*(6000000/4000.0)));
   568     07E1  3008               	movlw	8
   569     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   570     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   571     07E4  00C4               	movwf	??_main+2
   572     07E5  309D               	movlw	157
   573     07E6  00C3               	movwf	??_main+1
   574     07E7  3005               	movlw	5
   575     07E8  00C2               	movwf	??_main
   576     07E9                     u677:
   577     07E9  0BC2               	decfsz	??_main,f
   578     07EA  2FE9               	goto	u677
   579     07EB  0BC3               	decfsz	??_main+1,f
   580     07EC  2FE9               	goto	u677
   581     07ED  0BC4               	decfsz	??_main+2,f
   582     07EE  2FE9               	goto	u677
   583     07EF  2F5A               	goto	l1005
   584     07F0  120A  118A  2800   	ljmp	start
   585     07F3                     __end_of_main:
   586                           
   587                           	psect	text1
   588     0592                     __ptext1:	
   589 ;; *************** function ___lmul *****************
   590 ;; Defined at:
   591 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  multiplier      4    0[COMMON] unsigned long 
   594 ;;  multiplicand    4    4[COMMON] unsigned long 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  product         4    9[COMMON] unsigned long 
   597 ;; Return value:  Size  Location     Type
   598 ;;                  4    0[COMMON] unsigned long 
   599 ;; Registers used:
   600 ;;		wreg, status,2, status,0
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   606 ;;      Params:         8       0       0       0       0
   607 ;;      Locals:         4       0       0       0       0
   608 ;;      Temps:          1       0       0       0       0
   609 ;;      Totals:        13       0       0       0       0
   610 ;;Total ram usage:       13 bytes
   611 ;; Hardware stack levels used: 1
   612 ;; This function calls:
   613 ;;		Nothing
   614 ;; This function is called by:
   615 ;;		_main
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619     0592                     ___lmul:	
   620                           ;psect for function ___lmul
   621                           
   622     0592                     l947:	
   623                           ;incstack = 0
   624                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   625                           
   626     0592  3000               	movlw	0
   627     0593  00FC               	movwf	___lmul@product+3
   628     0594  3000               	movlw	0
   629     0595  00FB               	movwf	___lmul@product+2
   630     0596  3000               	movlw	0
   631     0597  00FA               	movwf	___lmul@product+1
   632     0598  3000               	movlw	0
   633     0599  00F9               	movwf	___lmul@product
   634     059A                     l949:
   635     059A  1C70               	btfss	___lmul@multiplier,0
   636     059B  2D9D               	goto	u501
   637     059C  2D9E               	goto	u500
   638     059D                     u501:
   639     059D  2DB5               	goto	l953
   640     059E                     u500:
   641     059E                     l951:
   642     059E  0874               	movf	___lmul@multiplicand,w
   643     059F  07F9               	addwf	___lmul@product,f
   644     05A0  0875               	movf	___lmul@multiplicand+1,w
   645     05A1  1103               	clrz
   646     05A2  1803               	skipnc
   647     05A3  3E01               	addlw	1
   648     05A4  1903               	skipnz
   649     05A5  2DA7               	goto	u511
   650     05A6  07FA               	addwf	___lmul@product+1,f
   651     05A7                     u511:
   652     05A7  0876               	movf	___lmul@multiplicand+2,w
   653     05A8  1103               	clrz
   654     05A9  1803               	skipnc
   655     05AA  3E01               	addlw	1
   656     05AB  1903               	skipnz
   657     05AC  2DAE               	goto	u512
   658     05AD  07FB               	addwf	___lmul@product+2,f
   659     05AE                     u512:
   660     05AE  0877               	movf	___lmul@multiplicand+3,w
   661     05AF  1103               	clrz
   662     05B0  1803               	skipnc
   663     05B1  3E01               	addlw	1
   664     05B2  1903               	skipnz
   665     05B3  2DB5               	goto	u513
   666     05B4  07FC               	addwf	___lmul@product+3,f
   667     05B5                     u513:
   668     05B5                     l953:
   669     05B5  3001               	movlw	1
   670     05B6  00F8               	movwf	??___lmul
   671     05B7                     u525:
   672     05B7  1003               	clrc
   673     05B8  0DF4               	rlf	___lmul@multiplicand,f
   674     05B9  0DF5               	rlf	___lmul@multiplicand+1,f
   675     05BA  0DF6               	rlf	___lmul@multiplicand+2,f
   676     05BB  0DF7               	rlf	___lmul@multiplicand+3,f
   677     05BC  0BF8               	decfsz	??___lmul,f
   678     05BD  2DB7               	goto	u525
   679     05BE                     l955:
   680     05BE  3001               	movlw	1
   681     05BF                     u535:
   682     05BF  1003               	clrc
   683     05C0  0CF3               	rrf	___lmul@multiplier+3,f
   684     05C1  0CF2               	rrf	___lmul@multiplier+2,f
   685     05C2  0CF1               	rrf	___lmul@multiplier+1,f
   686     05C3  0CF0               	rrf	___lmul@multiplier,f
   687     05C4  3EFF               	addlw	-1
   688     05C5  1D03               	skipz
   689     05C6  2DBF               	goto	u535
   690     05C7  0873               	movf	___lmul@multiplier+3,w
   691     05C8  0472               	iorwf	___lmul@multiplier+2,w
   692     05C9  0471               	iorwf	___lmul@multiplier+1,w
   693     05CA  0470               	iorwf	___lmul@multiplier,w
   694     05CB  1D03               	skipz
   695     05CC  2DCE               	goto	u541
   696     05CD  2DCF               	goto	u540
   697     05CE                     u541:
   698     05CE  2D9A               	goto	l949
   699     05CF                     u540:
   700     05CF                     l957:
   701     05CF  087C               	movf	___lmul@product+3,w
   702     05D0  00F3               	movwf	?___lmul+3
   703     05D1  087B               	movf	___lmul@product+2,w
   704     05D2  00F2               	movwf	?___lmul+2
   705     05D3  087A               	movf	___lmul@product+1,w
   706     05D4  00F1               	movwf	?___lmul+1
   707     05D5  0879               	movf	___lmul@product,w
   708     05D6  00F0               	movwf	?___lmul
   709     05D7                     l185:
   710     05D7  0008               	return
   711     05D8                     __end_of___lmul:
   712                           
   713                           	psect	text2
   714     06B8                     __ptext2:	
   715 ;; *************** function ___aldiv *****************
   716 ;; Defined at:
   717 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  divisor         4    0[BANK0 ] long 
   720 ;;  dividend        4    4[BANK0 ] long 
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  quotient        4   10[BANK0 ] long 
   723 ;;  sign            1    9[BANK0 ] unsigned char 
   724 ;;  counter         1    8[BANK0 ] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  4    0[BANK0 ] long 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0, btemp+1
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       8       0       0       0
   735 ;;      Locals:         0       6       0       0       0
   736 ;;      Temps:          1       0       0       0       0
   737 ;;      Totals:         1      14       0       0       0
   738 ;;Total ram usage:       15 bytes
   739 ;; Hardware stack levels used: 1
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747     06B8                     ___aldiv:	
   748                           ;psect for function ___aldiv
   749                           
   750     06B8                     l961:	
   751                           ;incstack = 0
   752                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
   753                           
   754     06B8  1283               	bcf	3,5	;RP0=0, select bank0
   755     06B9  1303               	bcf	3,6	;RP1=0, select bank0
   756     06BA  01BD               	clrf	___aldiv@sign
   757     06BB                     l963:
   758     06BB  1FB7               	btfss	___aldiv@divisor+3,7
   759     06BC  2EBE               	goto	u551
   760     06BD  2EBF               	goto	u550
   761     06BE                     u551:
   762     06BE  2ECC               	goto	l236
   763     06BF                     u550:
   764     06BF                     l965:
   765     06BF  09B4               	comf	___aldiv@divisor,f
   766     06C0  09B5               	comf	___aldiv@divisor+1,f
   767     06C1  09B6               	comf	___aldiv@divisor+2,f
   768     06C2  09B7               	comf	___aldiv@divisor+3,f
   769     06C3  0AB4               	incf	___aldiv@divisor,f
   770     06C4  1903               	skipnz
   771     06C5  0AB5               	incf	___aldiv@divisor+1,f
   772     06C6  1903               	skipnz
   773     06C7  0AB6               	incf	___aldiv@divisor+2,f
   774     06C8  1903               	skipnz
   775     06C9  0AB7               	incf	___aldiv@divisor+3,f
   776     06CA  01BD               	clrf	___aldiv@sign
   777     06CB  0ABD               	incf	___aldiv@sign,f
   778     06CC                     l236:
   779     06CC  1FBB               	btfss	___aldiv@dividend+3,7
   780     06CD  2ECF               	goto	u561
   781     06CE  2ED0               	goto	u560
   782     06CF                     u561:
   783     06CF  2EDF               	goto	l971
   784     06D0                     u560:
   785     06D0                     l967:
   786     06D0  09B8               	comf	___aldiv@dividend,f
   787     06D1  09B9               	comf	___aldiv@dividend+1,f
   788     06D2  09BA               	comf	___aldiv@dividend+2,f
   789     06D3  09BB               	comf	___aldiv@dividend+3,f
   790     06D4  0AB8               	incf	___aldiv@dividend,f
   791     06D5  1903               	skipnz
   792     06D6  0AB9               	incf	___aldiv@dividend+1,f
   793     06D7  1903               	skipnz
   794     06D8  0ABA               	incf	___aldiv@dividend+2,f
   795     06D9  1903               	skipnz
   796     06DA  0ABB               	incf	___aldiv@dividend+3,f
   797     06DB                     l969:
   798     06DB  3001               	movlw	1
   799     06DC  00FF               	movwf	btemp+1
   800     06DD  087F               	movf	btemp+1,w
   801     06DE  06BD               	xorwf	___aldiv@sign,f
   802     06DF                     l971:
   803     06DF  3000               	movlw	0
   804     06E0  00C1               	movwf	___aldiv@quotient+3
   805     06E1  3000               	movlw	0
   806     06E2  00C0               	movwf	___aldiv@quotient+2
   807     06E3  3000               	movlw	0
   808     06E4  00BF               	movwf	___aldiv@quotient+1
   809     06E5  3000               	movlw	0
   810     06E6  00BE               	movwf	___aldiv@quotient
   811     06E7                     l973:
   812     06E7  0837               	movf	___aldiv@divisor+3,w
   813     06E8  0436               	iorwf	___aldiv@divisor+2,w
   814     06E9  0435               	iorwf	___aldiv@divisor+1,w
   815     06EA  0434               	iorwf	___aldiv@divisor,w
   816     06EB  1903               	skipnz
   817     06EC  2EEE               	goto	u571
   818     06ED  2EEF               	goto	u570
   819     06EE                     u571:
   820     06EE  2F3C               	goto	l995
   821     06EF                     u570:
   822     06EF                     l975:
   823     06EF  01BC               	clrf	___aldiv@counter
   824     06F0  0ABC               	incf	___aldiv@counter,f
   825     06F1  2EFF               	goto	l981
   826     06F2                     l977:
   827     06F2  3001               	movlw	1
   828     06F3  00FD               	movwf	??___aldiv
   829     06F4                     u585:
   830     06F4  1003               	clrc
   831     06F5  0DB4               	rlf	___aldiv@divisor,f
   832     06F6  0DB5               	rlf	___aldiv@divisor+1,f
   833     06F7  0DB6               	rlf	___aldiv@divisor+2,f
   834     06F8  0DB7               	rlf	___aldiv@divisor+3,f
   835     06F9  0BFD               	decfsz	??___aldiv,f
   836     06FA  2EF4               	goto	u585
   837     06FB                     l979:
   838     06FB  3001               	movlw	1
   839     06FC  00FF               	movwf	btemp+1
   840     06FD  087F               	movf	btemp+1,w
   841     06FE  07BC               	addwf	___aldiv@counter,f
   842     06FF                     l981:
   843     06FF  1FB7               	btfss	___aldiv@divisor+3,7
   844     0700  2F02               	goto	u591
   845     0701  2F03               	goto	u590
   846     0702                     u591:
   847     0702  2EF2               	goto	l977
   848     0703                     u590:
   849     0703                     l983:
   850     0703  3001               	movlw	1
   851     0704  00FD               	movwf	??___aldiv
   852     0705                     u605:
   853     0705  1003               	clrc
   854     0706  0DBE               	rlf	___aldiv@quotient,f
   855     0707  0DBF               	rlf	___aldiv@quotient+1,f
   856     0708  0DC0               	rlf	___aldiv@quotient+2,f
   857     0709  0DC1               	rlf	___aldiv@quotient+3,f
   858     070A  0BFD               	decfsz	??___aldiv,f
   859     070B  2F05               	goto	u605
   860     070C                     l985:
   861     070C  0837               	movf	___aldiv@divisor+3,w
   862     070D  023B               	subwf	___aldiv@dividend+3,w
   863     070E  1D03               	skipz
   864     070F  2F1A               	goto	u615
   865     0710  0836               	movf	___aldiv@divisor+2,w
   866     0711  023A               	subwf	___aldiv@dividend+2,w
   867     0712  1D03               	skipz
   868     0713  2F1A               	goto	u615
   869     0714  0835               	movf	___aldiv@divisor+1,w
   870     0715  0239               	subwf	___aldiv@dividend+1,w
   871     0716  1D03               	skipz
   872     0717  2F1A               	goto	u615
   873     0718  0834               	movf	___aldiv@divisor,w
   874     0719  0238               	subwf	___aldiv@dividend,w
   875     071A                     u615:
   876     071A  1C03               	skipc
   877     071B  2F1D               	goto	u611
   878     071C  2F1E               	goto	u610
   879     071D                     u611:
   880     071D  2F2D               	goto	l991
   881     071E                     u610:
   882     071E                     l987:
   883     071E  0834               	movf	___aldiv@divisor,w
   884     071F  02B8               	subwf	___aldiv@dividend,f
   885     0720  0835               	movf	___aldiv@divisor+1,w
   886     0721  1C03               	skipc
   887     0722  0F35               	incfsz	___aldiv@divisor+1,w
   888     0723  02B9               	subwf	___aldiv@dividend+1,f
   889     0724  0836               	movf	___aldiv@divisor+2,w
   890     0725  1C03               	skipc
   891     0726  0F36               	incfsz	___aldiv@divisor+2,w
   892     0727  02BA               	subwf	___aldiv@dividend+2,f
   893     0728  0837               	movf	___aldiv@divisor+3,w
   894     0729  1C03               	skipc
   895     072A  0F37               	incfsz	___aldiv@divisor+3,w
   896     072B  02BB               	subwf	___aldiv@dividend+3,f
   897     072C                     l989:
   898     072C  143E               	bsf	___aldiv@quotient,0
   899     072D                     l991:
   900     072D  3001               	movlw	1
   901     072E                     u625:
   902     072E  1003               	clrc
   903     072F  0CB7               	rrf	___aldiv@divisor+3,f
   904     0730  0CB6               	rrf	___aldiv@divisor+2,f
   905     0731  0CB5               	rrf	___aldiv@divisor+1,f
   906     0732  0CB4               	rrf	___aldiv@divisor,f
   907     0733  3EFF               	addlw	-1
   908     0734  1D03               	skipz
   909     0735  2F2E               	goto	u625
   910     0736                     l993:
   911     0736  3001               	movlw	1
   912     0737  02BC               	subwf	___aldiv@counter,f
   913     0738  1D03               	btfss	3,2
   914     0739  2F3B               	goto	u631
   915     073A  2F3C               	goto	u630
   916     073B                     u631:
   917     073B  2F03               	goto	l983
   918     073C                     u630:
   919     073C                     l995:
   920     073C  083D               	movf	___aldiv@sign,w
   921     073D  1903               	btfsc	3,2
   922     073E  2F40               	goto	u641
   923     073F  2F41               	goto	u640
   924     0740                     u641:
   925     0740  2F4C               	goto	l999
   926     0741                     u640:
   927     0741                     l997:
   928     0741  09BE               	comf	___aldiv@quotient,f
   929     0742  09BF               	comf	___aldiv@quotient+1,f
   930     0743  09C0               	comf	___aldiv@quotient+2,f
   931     0744  09C1               	comf	___aldiv@quotient+3,f
   932     0745  0ABE               	incf	___aldiv@quotient,f
   933     0746  1903               	skipnz
   934     0747  0ABF               	incf	___aldiv@quotient+1,f
   935     0748  1903               	skipnz
   936     0749  0AC0               	incf	___aldiv@quotient+2,f
   937     074A  1903               	skipnz
   938     074B  0AC1               	incf	___aldiv@quotient+3,f
   939     074C                     l999:
   940     074C  0841               	movf	___aldiv@quotient+3,w
   941     074D  00B7               	movwf	?___aldiv+3
   942     074E  0840               	movf	___aldiv@quotient+2,w
   943     074F  00B6               	movwf	?___aldiv+2
   944     0750  083F               	movf	___aldiv@quotient+1,w
   945     0751  00B5               	movwf	?___aldiv+1
   946     0752  083E               	movf	___aldiv@quotient,w
   947     0753  00B4               	movwf	?___aldiv
   948     0754                     l246:
   949     0754  0008               	return
   950     0755                     __end_of___aldiv:
   951                           
   952                           	psect	text3
   953     05D8                     __ptext3:	
   954 ;; *************** function _LCD_output *****************
   955 ;; Defined at:
   956 ;;		line 90 in file "CLASS6_ADC.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  n               2   10[COMMON] unsigned int 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  j               2    1[BANK0 ] int 
   961 ;;  i               1    3[BANK0 ] unsigned char 
   962 ;;  result          1    0[BANK0 ] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   972 ;;      Params:         2       0       0       0       0
   973 ;;      Locals:         0       4       0       0       0
   974 ;;      Temps:          2       0       0       0       0
   975 ;;      Totals:         4       4       0       0       0
   976 ;;Total ram usage:        8 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; Hardware stack levels required when called: 1
   979 ;; This function calls:
   980 ;;		_LCD_data
   981 ;;		___bmul
   982 ;;		___lwdiv
   983 ;; This function is called by:
   984 ;;		_main
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988     05D8                     _LCD_output:	
   989                           ;psect for function _LCD_output
   990                           
   991     05D8                     l919:	
   992                           ;incstack = 0
   993                           ; Regs used in _LCD_output: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   994                           
   995                           
   996                           ;CLASS6_ADC.c: 91:     unsigned char result, i = 0;
   997     05D8  1283               	bcf	3,5	;RP0=0, select bank0
   998     05D9  1303               	bcf	3,6	;RP1=0, select bank0
   999     05DA  01B7               	clrf	LCD_output@i
  1000                           
  1001                           ;CLASS6_ADC.c: 92:     while (n != 0) {
  1002     05DB  2E10               	goto	l929
  1003     05DC                     l921:
  1004                           
  1005                           ;CLASS6_ADC.c: 93:         result = n - ((n / 10)*10);
  1006     05DC  30F6               	movlw	246
  1007     05DD  00F7               	movwf	___bmul@multiplicand
  1008     05DE  087B               	movf	LCD_output@n+1,w
  1009     05DF  00F3               	movwf	___lwdiv@dividend+1
  1010     05E0  087A               	movf	LCD_output@n,w
  1011     05E1  00F2               	movwf	___lwdiv@dividend
  1012     05E2  300A               	movlw	10
  1013     05E3  00F0               	movwf	___lwdiv@divisor
  1014     05E4  3000               	movlw	0
  1015     05E5  00F1               	movwf	___lwdiv@divisor+1
  1016     05E6  120A  118A  254E  120A  118A  	fcall	___lwdiv
  1017     05EB  0870               	movf	?___lwdiv,w
  1018     05EC  120A  118A  2521  120A  118A  	fcall	___bmul
  1019     05F1  077A               	addwf	LCD_output@n,w
  1020     05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1021     05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1022     05F4  00B4               	movwf	LCD_output@result
  1023     05F5                     l923:
  1024                           
  1025                           ;CLASS6_ADC.c: 94:         num_arr[i] = result;
  1026     05F5  0837               	movf	LCD_output@i,w
  1027     05F6  3E20               	addlw	(low (_num_arr| 0))& (0+255)
  1028     05F7  0084               	movwf	4
  1029     05F8  0834               	movf	LCD_output@result,w
  1030     05F9  1383               	bcf	3,7	;select IRP bank0
  1031     05FA  0080               	movwf	0
  1032     05FB                     l925:
  1033                           
  1034                           ;CLASS6_ADC.c: 95:         i++;
  1035     05FB  3001               	movlw	1
  1036     05FC  00FF               	movwf	btemp+1
  1037     05FD  087F               	movf	btemp+1,w
  1038     05FE  07B7               	addwf	LCD_output@i,f
  1039     05FF                     l927:
  1040                           
  1041                           ;CLASS6_ADC.c: 96:         n /= 10;
  1042     05FF  300A               	movlw	10
  1043     0600  00F0               	movwf	___lwdiv@divisor
  1044     0601  3000               	movlw	0
  1045     0602  00F1               	movwf	___lwdiv@divisor+1
  1046     0603  087B               	movf	LCD_output@n+1,w
  1047     0604  00F3               	movwf	___lwdiv@dividend+1
  1048     0605  087A               	movf	LCD_output@n,w
  1049     0606  00F2               	movwf	___lwdiv@dividend
  1050     0607  120A  118A  254E  120A  118A  	fcall	___lwdiv
  1051     060C  0871               	movf	?___lwdiv+1,w
  1052     060D  00FB               	movwf	LCD_output@n+1
  1053     060E  0870               	movf	?___lwdiv,w
  1054     060F  00FA               	movwf	LCD_output@n
  1055     0610                     l929:
  1056                           
  1057                           ;CLASS6_ADC.c: 92:     while (n != 0) {
  1058     0610  087A               	movf	LCD_output@n,w
  1059     0611  047B               	iorwf	LCD_output@n+1,w
  1060     0612  1D03               	btfss	3,2
  1061     0613  2E15               	goto	u481
  1062     0614  2E16               	goto	u480
  1063     0615                     u481:
  1064     0615  2DDC               	goto	l921
  1065     0616                     u480:
  1066     0616                     l931:
  1067                           
  1068                           ;CLASS6_ADC.c: 99:     num_arr[i] = '\0';
  1069     0616  1283               	bcf	3,5	;RP0=0, select bank0
  1070     0617  1303               	bcf	3,6	;RP1=0, select bank0
  1071     0618  0837               	movf	LCD_output@i,w
  1072     0619  3E20               	addlw	(low (_num_arr| 0))& (0+255)
  1073     061A  0084               	movwf	4
  1074     061B  1383               	bcf	3,7	;select IRP bank0
  1075     061C  0180               	clrf	0
  1076     061D                     l933:
  1077                           
  1078                           ;CLASS6_ADC.c: 101:     i -= 1;
  1079     061D  3001               	movlw	1
  1080     061E  02B7               	subwf	LCD_output@i,f
  1081     061F                     l935:
  1082                           
  1083                           ;CLASS6_ADC.c: 102:     for (int j = i; j >= 0; j--) {
  1084     061F  0837               	movf	LCD_output@i,w
  1085     0620  00FC               	movwf	??_LCD_output
  1086     0621  01FD               	clrf	??_LCD_output+1
  1087     0622  087C               	movf	??_LCD_output,w
  1088     0623  00B5               	movwf	LCD_output@j
  1089     0624  087D               	movf	??_LCD_output+1,w
  1090     0625  00B6               	movwf	LCD_output@j+1
  1091     0626                     l937:
  1092     0626  1FB6               	btfss	LCD_output@j+1,7
  1093     0627  2E29               	goto	u491
  1094     0628  2E2A               	goto	u490
  1095     0629                     u491:
  1096     0629  2E2B               	goto	l941
  1097     062A                     u490:
  1098     062A  2E3F               	goto	l79
  1099     062B                     l941:
  1100                           
  1101                           ;CLASS6_ADC.c: 103:         LCD_data(0x30 + num_arr[j]);
  1102     062B  0835               	movf	LCD_output@j,w
  1103     062C  3E20               	addlw	(low (_num_arr| 0))& (0+255)
  1104     062D  0084               	movwf	4
  1105     062E  1383               	bcf	3,7	;select IRP bank0
  1106     062F  0800               	movf	0,w
  1107     0630  3E30               	addlw	48
  1108     0631  120A  118A  250C  120A  118A  	fcall	_LCD_data
  1109     0636                     l943:
  1110                           
  1111                           ;CLASS6_ADC.c: 104:     }
  1112     0636  30FF               	movlw	255
  1113     0637  1283               	bcf	3,5	;RP0=0, select bank0
  1114     0638  1303               	bcf	3,6	;RP1=0, select bank0
  1115     0639  07B5               	addwf	LCD_output@j,f
  1116     063A  1803               	skipnc
  1117     063B  0AB6               	incf	LCD_output@j+1,f
  1118     063C  30FF               	movlw	255
  1119     063D  07B6               	addwf	LCD_output@j+1,f
  1120     063E  2E26               	goto	l937
  1121     063F                     l79:
  1122     063F  0008               	return
  1123     0640                     __end_of_LCD_output:
  1124                           
  1125                           	psect	text4
  1126     054E                     __ptext4:	
  1127 ;; *************** function ___lwdiv *****************
  1128 ;; Defined at:
  1129 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  divisor         2    0[COMMON] unsigned int 
  1132 ;;  dividend        2    2[COMMON] unsigned int 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  quotient        2    4[COMMON] unsigned int 
  1135 ;;  counter         1    6[COMMON] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  2    0[COMMON] unsigned int 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0, btemp+1
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         4       0       0       0       0
  1146 ;;      Locals:         3       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0
  1148 ;;      Totals:         7       0       0       0       0
  1149 ;;Total ram usage:        7 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_LCD_output
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158     054E                     ___lwdiv:	
  1159                           ;psect for function ___lwdiv
  1160                           
  1161     054E                     l863:	
  1162                           ;incstack = 0
  1163                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1164                           
  1165     054E  01F4               	clrf	___lwdiv@quotient
  1166     054F  01F5               	clrf	___lwdiv@quotient+1
  1167     0550                     l865:
  1168     0550  0870               	movf	___lwdiv@divisor,w
  1169     0551  0471               	iorwf	___lwdiv@divisor+1,w
  1170     0552  1903               	btfsc	3,2
  1171     0553  2D55               	goto	u361
  1172     0554  2D56               	goto	u360
  1173     0555                     u361:
  1174     0555  2D8D               	goto	l885
  1175     0556                     u360:
  1176     0556                     l867:
  1177     0556  01F6               	clrf	___lwdiv@counter
  1178     0557  0AF6               	incf	___lwdiv@counter,f
  1179     0558  2D64               	goto	l873
  1180     0559                     l869:
  1181     0559  3001               	movlw	1
  1182     055A                     u375:
  1183     055A  1003               	clrc
  1184     055B  0DF0               	rlf	___lwdiv@divisor,f
  1185     055C  0DF1               	rlf	___lwdiv@divisor+1,f
  1186     055D  3EFF               	addlw	-1
  1187     055E  1D03               	skipz
  1188     055F  2D5A               	goto	u375
  1189     0560                     l871:
  1190     0560  3001               	movlw	1
  1191     0561  00FF               	movwf	btemp+1
  1192     0562  087F               	movf	btemp+1,w
  1193     0563  07F6               	addwf	___lwdiv@counter,f
  1194     0564                     l873:
  1195     0564  1FF1               	btfss	___lwdiv@divisor+1,7
  1196     0565  2D67               	goto	u381
  1197     0566  2D68               	goto	u380
  1198     0567                     u381:
  1199     0567  2D59               	goto	l869
  1200     0568                     u380:
  1201     0568                     l875:
  1202     0568  3001               	movlw	1
  1203     0569                     u395:
  1204     0569  1003               	clrc
  1205     056A  0DF4               	rlf	___lwdiv@quotient,f
  1206     056B  0DF5               	rlf	___lwdiv@quotient+1,f
  1207     056C  3EFF               	addlw	-1
  1208     056D  1D03               	skipz
  1209     056E  2D69               	goto	u395
  1210     056F  0871               	movf	___lwdiv@divisor+1,w
  1211     0570  0273               	subwf	___lwdiv@dividend+1,w
  1212     0571  1D03               	skipz
  1213     0572  2D75               	goto	u405
  1214     0573  0870               	movf	___lwdiv@divisor,w
  1215     0574  0272               	subwf	___lwdiv@dividend,w
  1216     0575                     u405:
  1217     0575  1C03               	skipc
  1218     0576  2D78               	goto	u401
  1219     0577  2D79               	goto	u400
  1220     0578                     u401:
  1221     0578  2D80               	goto	l881
  1222     0579                     u400:
  1223     0579                     l877:
  1224     0579  0870               	movf	___lwdiv@divisor,w
  1225     057A  02F2               	subwf	___lwdiv@dividend,f
  1226     057B  0871               	movf	___lwdiv@divisor+1,w
  1227     057C  1C03               	skipc
  1228     057D  03F3               	decf	___lwdiv@dividend+1,f
  1229     057E  02F3               	subwf	___lwdiv@dividend+1,f
  1230     057F                     l879:
  1231     057F  1474               	bsf	___lwdiv@quotient,0
  1232     0580                     l881:
  1233     0580  3001               	movlw	1
  1234     0581                     u415:
  1235     0581  1003               	clrc
  1236     0582  0CF1               	rrf	___lwdiv@divisor+1,f
  1237     0583  0CF0               	rrf	___lwdiv@divisor,f
  1238     0584  3EFF               	addlw	-1
  1239     0585  1D03               	skipz
  1240     0586  2D81               	goto	u415
  1241     0587                     l883:
  1242     0587  3001               	movlw	1
  1243     0588  02F6               	subwf	___lwdiv@counter,f
  1244     0589  1D03               	btfss	3,2
  1245     058A  2D8C               	goto	u421
  1246     058B  2D8D               	goto	u420
  1247     058C                     u421:
  1248     058C  2D68               	goto	l875
  1249     058D                     u420:
  1250     058D                     l885:
  1251     058D  0875               	movf	___lwdiv@quotient+1,w
  1252     058E  00F1               	movwf	?___lwdiv+1
  1253     058F  0874               	movf	___lwdiv@quotient,w
  1254     0590  00F0               	movwf	?___lwdiv
  1255     0591                     l451:
  1256     0591  0008               	return
  1257     0592                     __end_of___lwdiv:
  1258                           
  1259                           	psect	text5
  1260     0521                     __ptext5:	
  1261 ;; *************** function ___bmul *****************
  1262 ;; Defined at:
  1263 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  multiplier      1    wreg     unsigned char 
  1266 ;;  multiplicand    1    7[COMMON] unsigned char 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  multiplier      1    9[COMMON] unsigned char 
  1269 ;;  product         1    8[COMMON] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      unsigned char 
  1272 ;; Registers used:
  1273 ;;		wreg, status,2, status,0, btemp+1
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1279 ;;      Params:         1       0       0       0       0
  1280 ;;      Locals:         2       0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0
  1282 ;;      Totals:         3       0       0       0       0
  1283 ;;Total ram usage:        3 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_LCD_output
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292     0521                     ___bmul:	
  1293                           ;psect for function ___bmul
  1294                           
  1295                           
  1296                           ;incstack = 0
  1297                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1298                           ;___bmul@multiplier stored from wreg
  1299     0521  00F9               	movwf	___bmul@multiplier
  1300     0522                     l847:
  1301     0522  01F8               	clrf	___bmul@product
  1302     0523                     l849:
  1303     0523  1C79               	btfss	___bmul@multiplier,0
  1304     0524  2D26               	goto	u341
  1305     0525  2D27               	goto	u340
  1306     0526                     u341:
  1307     0526  2D2B               	goto	l853
  1308     0527                     u340:
  1309     0527                     l851:
  1310     0527  0877               	movf	___bmul@multiplicand,w
  1311     0528  00FF               	movwf	btemp+1
  1312     0529  087F               	movf	btemp+1,w
  1313     052A  07F8               	addwf	___bmul@product,f
  1314     052B                     l853:
  1315     052B  1003               	clrc
  1316     052C  0DF7               	rlf	___bmul@multiplicand,f
  1317     052D                     l855:
  1318     052D  1003               	clrc
  1319     052E  0CF9               	rrf	___bmul@multiplier,f
  1320     052F                     l857:
  1321     052F  0879               	movf	___bmul@multiplier,w
  1322     0530  1D03               	btfss	3,2
  1323     0531  2D33               	goto	u351
  1324     0532  2D34               	goto	u350
  1325     0533                     u351:
  1326     0533  2D23               	goto	l849
  1327     0534                     u350:
  1328     0534                     l859:
  1329     0534  0878               	movf	___bmul@product,w
  1330     0535                     l197:
  1331     0535  0008               	return
  1332     0536                     __end_of___bmul:
  1333                           
  1334                           	psect	text6
  1335     050C                     __ptext6:	
  1336 ;; *************** function _LCD_data *****************
  1337 ;; Defined at:
  1338 ;;		line 121 in file "CLASS6_ADC.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  hex             1    wreg     unsigned char 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  hex             1    2[COMMON] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0, btemp+1
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       0       0       0       0
  1353 ;;      Locals:         1       0       0       0       0
  1354 ;;      Temps:          2       0       0       0       0
  1355 ;;      Totals:         3       0       0       0       0
  1356 ;;Total ram usage:        3 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;;		_LCD_output
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366     050C                     _LCD_data:	
  1367                           ;psect for function _LCD_data
  1368                           
  1369                           
  1370                           ;incstack = 0
  1371                           ; Regs used in _LCD_data: [wreg+status,2+status,0+btemp+1]
  1372                           ;LCD_data@hex stored from wreg
  1373     050C  00F2               	movwf	LCD_data@hex
  1374     050D                     l837:
  1375                           
  1376                           ;CLASS6_ADC.c: 122:     PORTC |= 0x08;
  1377     050D  1283               	bcf	3,5	;RP0=0, select bank0
  1378     050E  1303               	bcf	3,6	;RP1=0, select bank0
  1379     050F  1587               	bsf	7,3	;volatile
  1380     0510                     l839:
  1381                           
  1382                           ;CLASS6_ADC.c: 123:     PORTD = hex;
  1383     0510  0872               	movf	LCD_data@hex,w
  1384     0511  0088               	movwf	8	;volatile
  1385     0512                     l841:
  1386                           
  1387                           ;CLASS6_ADC.c: 124:     PORTC |= 0x01;
  1388     0512  1407               	bsf	7,0	;volatile
  1389     0513                     l843:
  1390                           
  1391                           ;CLASS6_ADC.c: 125:     PORTC &= ~0x01;
  1392     0513  30FE               	movlw	254
  1393     0514  00FF               	movwf	btemp+1
  1394     0515  087F               	movf	btemp+1,w
  1395     0516  0587               	andwf	7,f	;volatile
  1396     0517                     l845:
  1397                           
  1398                           ;CLASS6_ADC.c: 126:     _delay((unsigned long)((50)*(6000000/4000.0)));
  1399     0517  3062               	movlw	98
  1400     0518  00F1               	movwf	??_LCD_data+1
  1401     0519  3065               	movlw	101
  1402     051A  00F0               	movwf	??_LCD_data
  1403     051B                     u687:
  1404     051B  0BF0               	decfsz	??_LCD_data,f
  1405     051C  2D1B               	goto	u687
  1406     051D  0BF1               	decfsz	??_LCD_data+1,f
  1407     051E  2D1B               	goto	u687
  1408     051F  2D20               	nop2
  1409     0520                     l85:
  1410     0520  0008               	return
  1411     0521                     __end_of_LCD_data:
  1412                           
  1413                           	psect	text7
  1414     0640                     __ptext7:	
  1415 ;; *************** function _ADC_LCD_PIC_init *****************
  1416 ;; Defined at:
  1417 ;;		line 57 in file "CLASS6_ADC.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1431 ;;      Params:         0       0       0       0       0
  1432 ;;      Locals:         0       0       0       0       0
  1433 ;;      Temps:          2       0       0       0       0
  1434 ;;      Totals:         2       0       0       0       0
  1435 ;;Total ram usage:        2 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; Hardware stack levels required when called: 1
  1438 ;; This function calls:
  1439 ;;		_LCD_command
  1440 ;; This function is called by:
  1441 ;;		_main
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445     0640                     _ADC_LCD_PIC_init:	
  1446                           ;psect for function _ADC_LCD_PIC_init
  1447                           
  1448     0640                     l889:	
  1449                           ;incstack = 0
  1450                           ; Regs used in _ADC_LCD_PIC_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1451                           
  1452                           
  1453                           ;CLASS6_ADC.c: 59:     TRISC = 0x00;
  1454     0640  1683               	bsf	3,5	;RP0=1, select bank1
  1455     0641  1303               	bcf	3,6	;RP1=0, select bank1
  1456     0642  0187               	clrf	7	;volatile
  1457                           
  1458                           ;CLASS6_ADC.c: 60:     TRISD = 0x00;
  1459     0643  0188               	clrf	8	;volatile
  1460     0644                     l891:
  1461                           
  1462                           ;CLASS6_ADC.c: 62:     TRISA = 0x01;
  1463     0644  3001               	movlw	1
  1464     0645  0085               	movwf	5	;volatile
  1465     0646                     l893:
  1466                           
  1467                           ;CLASS6_ADC.c: 66:     ADCON0 = 0x81;
  1468     0646  3081               	movlw	129
  1469     0647  1283               	bcf	3,5	;RP0=0, select bank0
  1470     0648  1303               	bcf	3,6	;RP1=0, select bank0
  1471     0649  009F               	movwf	31	;volatile
  1472     064A                     l895:
  1473                           
  1474                           ;CLASS6_ADC.c: 70:     ADCON1 = 0x8E;
  1475     064A  308E               	movlw	142
  1476     064B  1683               	bsf	3,5	;RP0=1, select bank1
  1477     064C  1303               	bcf	3,6	;RP1=0, select bank1
  1478     064D  009F               	movwf	31	;volatile
  1479     064E                     l897:
  1480                           
  1481                           ;CLASS6_ADC.c: 72:     LCD_command(0x30);
  1482     064E  3030               	movlw	48
  1483     064F  120A  118A  2536  120A  118A  	fcall	_LCD_command
  1484     0654                     l899:
  1485                           
  1486                           ;CLASS6_ADC.c: 73:     _delay((unsigned long)((50)*(6000000/4000.0)));
  1487     0654  3062               	movlw	98
  1488     0655  00F4               	movwf	??_ADC_LCD_PIC_init+1
  1489     0656  3065               	movlw	101
  1490     0657  00F3               	movwf	??_ADC_LCD_PIC_init
  1491     0658                     u697:
  1492     0658  0BF3               	decfsz	??_ADC_LCD_PIC_init,f
  1493     0659  2E58               	goto	u697
  1494     065A  0BF4               	decfsz	??_ADC_LCD_PIC_init+1,f
  1495     065B  2E58               	goto	u697
  1496     065C  2E5D               	nop2
  1497     065D                     l901:
  1498                           
  1499                           ;CLASS6_ADC.c: 74:     LCD_command(0x30);
  1500     065D  3030               	movlw	48
  1501     065E  120A  118A  2536  120A  118A  	fcall	_LCD_command
  1502     0663                     l903:
  1503                           
  1504                           ;CLASS6_ADC.c: 75:     _delay((unsigned long)((50)*(6000000/4000.0)));
  1505     0663  3062               	movlw	98
  1506     0664  00F4               	movwf	??_ADC_LCD_PIC_init+1
  1507     0665  3065               	movlw	101
  1508     0666  00F3               	movwf	??_ADC_LCD_PIC_init
  1509     0667                     u707:
  1510     0667  0BF3               	decfsz	??_ADC_LCD_PIC_init,f
  1511     0668  2E67               	goto	u707
  1512     0669  0BF4               	decfsz	??_ADC_LCD_PIC_init+1,f
  1513     066A  2E67               	goto	u707
  1514     066B  2E6C               	nop2
  1515     066C                     l905:
  1516                           
  1517                           ;CLASS6_ADC.c: 76:     LCD_command(0x30);
  1518     066C  3030               	movlw	48
  1519     066D  120A  118A  2536  120A  118A  	fcall	_LCD_command
  1520     0672                     l907:
  1521                           
  1522                           ;CLASS6_ADC.c: 77:     _delay((unsigned long)((50)*(6000000/4000.0)));
  1523     0672  3062               	movlw	98
  1524     0673  00F4               	movwf	??_ADC_LCD_PIC_init+1
  1525     0674  3065               	movlw	101
  1526     0675  00F3               	movwf	??_ADC_LCD_PIC_init
  1527     0676                     u717:
  1528     0676  0BF3               	decfsz	??_ADC_LCD_PIC_init,f
  1529     0677  2E76               	goto	u717
  1530     0678  0BF4               	decfsz	??_ADC_LCD_PIC_init+1,f
  1531     0679  2E76               	goto	u717
  1532     067A  2E7B               	nop2
  1533     067B                     l909:
  1534                           
  1535                           ;CLASS6_ADC.c: 78:     LCD_command(0x38);
  1536     067B  3038               	movlw	56
  1537     067C  120A  118A  2536  120A  118A  	fcall	_LCD_command
  1538     0681                     l56:	
  1539                           ;CLASS6_ADC.c: 79:     while (RD7 == 1);
  1540                           
  1541     0681  1283               	bcf	3,5	;RP0=0, select bank0
  1542     0682  1303               	bcf	3,6	;RP1=0, select bank0
  1543     0683  1B88               	btfsc	8,7	;volatile
  1544     0684  2E86               	goto	u431
  1545     0685  2E87               	goto	u430
  1546     0686                     u431:
  1547     0686  2E81               	goto	l56
  1548     0687                     u430:
  1549     0687                     l911:
  1550                           
  1551                           ;CLASS6_ADC.c: 80:     LCD_command(0x08);
  1552     0687  3008               	movlw	8
  1553     0688  120A  118A  2536  120A  118A  	fcall	_LCD_command
  1554     068D                     l59:	
  1555                           ;CLASS6_ADC.c: 81:     while (RD7 == 1);
  1556                           
  1557     068D  1283               	bcf	3,5	;RP0=0, select bank0
  1558     068E  1303               	bcf	3,6	;RP1=0, select bank0
  1559     068F  1B88               	btfsc	8,7	;volatile
  1560     0690  2E92               	goto	u441
  1561     0691  2E93               	goto	u440
  1562     0692                     u441:
  1563     0692  2E8D               	goto	l59
  1564     0693                     u440:
  1565     0693                     l913:
  1566                           
  1567                           ;CLASS6_ADC.c: 82:     LCD_command(0x01);
  1568     0693  3001               	movlw	1
  1569     0694  120A  118A  2536  120A  118A  	fcall	_LCD_command
  1570     0699                     l62:	
  1571                           ;CLASS6_ADC.c: 83:     while (RD7 == 1);
  1572                           
  1573     0699  1283               	bcf	3,5	;RP0=0, select bank0
  1574     069A  1303               	bcf	3,6	;RP1=0, select bank0
  1575     069B  1B88               	btfsc	8,7	;volatile
  1576     069C  2E9E               	goto	u451
  1577     069D  2E9F               	goto	u450
  1578     069E                     u451:
  1579     069E  2E99               	goto	l62
  1580     069F                     u450:
  1581     069F                     l915:
  1582                           
  1583                           ;CLASS6_ADC.c: 84:     LCD_command(0x06);
  1584     069F  3006               	movlw	6
  1585     06A0  120A  118A  2536  120A  118A  	fcall	_LCD_command
  1586     06A5                     l65:	
  1587                           ;CLASS6_ADC.c: 85:     while (RD7 == 1);
  1588                           
  1589     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1590     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1591     06A7  1B88               	btfsc	8,7	;volatile
  1592     06A8  2EAA               	goto	u461
  1593     06A9  2EAB               	goto	u460
  1594     06AA                     u461:
  1595     06AA  2EA5               	goto	l65
  1596     06AB                     u460:
  1597     06AB                     l917:
  1598                           
  1599                           ;CLASS6_ADC.c: 86:     LCD_command(0x0E);
  1600     06AB  300E               	movlw	14
  1601     06AC  120A  118A  2536  120A  118A  	fcall	_LCD_command
  1602     06B1                     l68:	
  1603                           ;CLASS6_ADC.c: 87:     while (RD7 == 1);
  1604                           
  1605     06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1606     06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1607     06B3  1B88               	btfsc	8,7	;volatile
  1608     06B4  2EB6               	goto	u471
  1609     06B5  2EB7               	goto	u470
  1610     06B6                     u471:
  1611     06B6  2EB1               	goto	l68
  1612     06B7                     u470:
  1613     06B7                     l71:
  1614     06B7  0008               	return
  1615     06B8                     __end_of_ADC_LCD_PIC_init:
  1616                           
  1617                           	psect	text8
  1618     0536                     __ptext8:	
  1619 ;; *************** function _LCD_command *****************
  1620 ;; Defined at:
  1621 ;;		line 110 in file "CLASS6_ADC.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  hex             1    wreg     unsigned char 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  hex             1    2[COMMON] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, btemp+1
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       0       0       0       0
  1636 ;;      Locals:         1       0       0       0       0
  1637 ;;      Temps:          2       0       0       0       0
  1638 ;;      Totals:         3       0       0       0       0
  1639 ;;Total ram usage:        3 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;;		_ADC_LCD_PIC_init
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649     0536                     _LCD_command:	
  1650                           ;psect for function _LCD_command
  1651                           
  1652                           
  1653                           ;incstack = 0
  1654                           ; Regs used in _LCD_command: [wreg+status,2+status,0+btemp+1]
  1655                           ;LCD_command@hex stored from wreg
  1656     0536  00F2               	movwf	LCD_command@hex
  1657     0537                     l829:
  1658                           
  1659                           ;CLASS6_ADC.c: 111:     PORTC &= 0xF7;
  1660     0537  30F7               	movlw	247
  1661     0538  00FF               	movwf	btemp+1
  1662     0539  087F               	movf	btemp+1,w
  1663     053A  1283               	bcf	3,5	;RP0=0, select bank0
  1664     053B  1303               	bcf	3,6	;RP1=0, select bank0
  1665     053C  0587               	andwf	7,f	;volatile
  1666     053D                     l831:
  1667                           
  1668                           ;CLASS6_ADC.c: 112:     PORTD = hex;
  1669     053D  0872               	movf	LCD_command@hex,w
  1670     053E  0088               	movwf	8	;volatile
  1671     053F                     l833:
  1672                           
  1673                           ;CLASS6_ADC.c: 113:     PORTC |= 0x01;
  1674     053F  1407               	bsf	7,0	;volatile
  1675     0540                     l835:
  1676                           
  1677                           ;CLASS6_ADC.c: 114:     PORTC &= ~0x01;
  1678     0540  30FE               	movlw	254
  1679     0541  00FF               	movwf	btemp+1
  1680     0542  087F               	movf	btemp+1,w
  1681     0543  0587               	andwf	7,f	;volatile
  1682                           
  1683                           ;CLASS6_ADC.c: 115:     _delay((unsigned long)((50)*(6000000/4000.0)));
  1684     0544  3062               	movlw	98
  1685     0545  00F1               	movwf	??_LCD_command+1
  1686     0546  3065               	movlw	101
  1687     0547  00F0               	movwf	??_LCD_command
  1688     0548                     u727:
  1689     0548  0BF0               	decfsz	??_LCD_command,f
  1690     0549  2D48               	goto	u727
  1691     054A  0BF1               	decfsz	??_LCD_command+1,f
  1692     054B  2D48               	goto	u727
  1693     054C  2D4D               	nop2
  1694     054D                     l82:
  1695     054D  0008               	return
  1696     054E                     __end_of_LCD_command:
  1697     007E                     btemp	set	126	;btemp
  1698     007E                     wtemp0	set	126
  1699                           
  1700                           	psect	config
  1701                           
  1702                           ;Config register CONFIG @ 0x2007
  1703                           ;	Oscillator Selection bits
  1704                           ;	FOSC = EXTRC, RC oscillator
  1705                           ;	Watchdog Timer Enable bit
  1706                           ;	WDTE = OFF, WDT disabled
  1707                           ;	Power-up Timer Enable bit
  1708                           ;	PWRTE = OFF, PWRT disabled
  1709                           ;	Brown-out Reset Enable bit
  1710                           ;	BOREN = OFF, BOR disabled
  1711                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1712                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1713                           ;	Data EEPROM Memory Code Protection bit
  1714                           ;	CPD = OFF, Data EEPROM code protection off
  1715                           ;	Flash Program Memory Write Enable bits
  1716                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1717                           ;	In-Circuit Debugger Mode bit
  1718                           ;	DEBUG = 0x1, unprogrammed default
  1719                           ;	Flash Program Memory Code Protection bit
  1720                           ;	CP = OFF, Code protection off
  1721     2007                     	org	8199
  1722     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_output
    _main->___aldiv
    ___aldiv->___lmul
    _LCD_output->___bmul
    ___bmul->___lwdiv
    _ADC_LCD_PIC_init->_LCD_command

Critical Paths under _main in BANK0

    _main->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1743
                                             14 BANK0      3     3      0
                   _ADC_LCD_PIC_init
                        _LCD_command
                           _LCD_data
                         _LCD_output
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_output                                           8     6      2     981
                                             10 COMMON     4     2      2
                                              0 BANK0      4     4      0
                           _LCD_data
                             ___bmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     168
                                              7 COMMON     3     2      1
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_LCD_PIC_init                                     2     2      0      22
                                              3 COMMON     2     2      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _LCD_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_LCD_PIC_init
     _LCD_command
   _LCD_command
   _LCD_data
   _LCD_output
     _LCD_data
     ___bmul
       ___lwdiv (ARG)
     ___lwdiv
   ___aldiv
     ___lmul (ARG)
   ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      33       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      25       5       46.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      33      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Jan 16 08:15:17 2024

          ___bmul@product 0078                        l62 0699                        l46 075D  
                      l71 06B7                        l56 0681                        l65 06A5  
                      l82 054D                        l59 068D                        l68 06B1  
                      l85 0520                        l79 063F                        fsr 0004  
                     l236 06CC                       l246 0754                       l185 05D7  
                     l451 0591                       l197 0535                       l901 065D  
                     l831 053D                       l911 0687                       l903 0663  
                     l833 053F                       l913 0693                       l905 066C  
                     l841 0512                       l921 05DC                       l835 0540  
                     l915 069F                       l907 0672                       l843 0513  
                     l851 0527                       l931 0616                       l923 05F5  
                     l829 0537                       l917 06AB                       l909 067B  
                     l845 0517                       l837 050D                       l853 052B  
                     l941 062B                       l933 061D                       l925 05FB  
                     l839 0510                       l855 052D                       l847 0522  
                     l871 0560                       l863 054E                       l943 0636  
                     l935 061F                       l927 05FF                       l919 05D8  
                     l951 059E                       l857 052F                       l849 0523  
                     l881 0580                       l873 0564                       l865 0550  
                     l937 0626                       l929 0610                       l961 06B8  
                     l953 05B5                       l891 0644                       l859 0534  
                     l883 0587                       l875 0568                       l867 0556  
                     l971 06DF                       l963 06BB                       l955 05BE  
                     l947 0592                       l893 0646                       l877 0579  
                     l869 0559                       l885 058D                       l981 06FF  
                     l973 06E7                       l965 06BF                       l957 05CF  
                     l949 059A                       l895 064A                       l879 057F  
                     l991 072D                       l983 0703                       l975 06EF  
                     l967 06D0                       l897 064E                       l889 0640  
                     l993 0736                       l985 070C                       l977 06F2  
                     l969 06DB                       l899 0654                       l987 071E  
                     l979 06FB                       l995 073C                       l997 0741  
                     l989 072C                       l999 074C                       _RD7 0047  
                     u400 0579                       u401 0578                       u340 0527  
                     u420 058D                       u500 059E                       u341 0526  
                     u421 058C                       u405 0575                       u501 059D  
                     u430 0687                       u350 0534                       u431 0686  
                     u351 0533                       u415 0581                       u511 05A7  
                     u440 0693                       u360 0556                       u512 05AE  
                     u441 0692                       u361 0555                       u513 05B5  
                     u450 069F                       u610 071E                       u451 069E  
                     u611 071D                       u460 06AB                       u380 0568  
                     u540 05CF                       u461 06AA                       u381 0567  
                     u605 0705                       u541 05CE                       u525 05B7  
                     u470 06B7                       u630 073C                       u550 06BF  
                     u471 06B6                       u375 055A                       u631 073B  
                     u615 071A                       u551 06BE                       u535 05BF  
                     u480 0616                       u640 0741                       u560 06D0  
                     u481 0615                       u641 0740                       u625 072E  
                     u561 06CF                       u490 062A                       u570 06EF  
                     u650 0761                       u707 0667                       u395 0569  
                     u491 0629                       u571 06EE                       u651 0760  
                     u660 07BF                       u717 0676                       u661 07BE  
                     u590 0703                       u727 0548                       u591 0702  
                     u585 06F4                       u677 07E9                       u687 051B  
                     u697 0658                       fsr0 0004                       indf 0000  
             ?_LCD_output 007A                      l1011 0779                      l1003 0755  
                    l1021 07CF                      l1013 07AF                      l1005 075A  
                    l1023 07D5                      l1015 07B5                      l1007 0761  
                    l1025 07DB                      l1017 07BF                      l1009 0769  
                    l1027 07E1                      l1019 07C6              ?_LCD_command 0070  
                    _main 0755                      btemp 007E                      start 0000  
       ___bmul@multiplier 0079          _ADC_LCD_PIC_init 0640          __end_of_LCD_data 0521  
         __end_of___aldiv 0755                     ?_main 0070           __end_of___lwdiv 0592  
                   _PORTC 0007                     _PORTD 0008                     _TRISA 0085  
                   _TRISC 0087                     _TRISD 0088       ___lmul@multiplicand 0074  
             LCD_data@hex 0072                     _value 002E                     status 0003  
                   wtemp0 007E           __initialization 07F3              __end_of_main 07F3  
                  ??_main 0042               LCD_output@i 0037               LCD_output@j 0035  
             LCD_output@n 007A                    _ADCON0 001F                    _ADCON1 009F  
                  _ADRESH 001E                    _ADRESL 009E                    ___bmul 0521  
                  ___lmul 0592                 ??___aldiv 007D                 ??___lwdiv 0074  
        LCD_output@result 0034   __end_of__initialization 07FC                 ?_LCD_data 0070  
     ___bmul@multiplicand 0077            __pcstackCOMMON 0070              ??_LCD_output 007C  
__end_of_ADC_LCD_PIC_init 06B8                __pbssBANK0 0020                ??_LCD_data 0070  
              __pmaintext 0755                   ?___bmul 0077                   ?___lmul 0070  
      __end_of_LCD_output 0640            ___lmul@product 0079                   _H_value 0032  
                 _L_value 0033                   ___aldiv 06B8                   ___lwdiv 054E  
                 __ptext1 0592                   __ptext2 06B8                   __ptext3 05D8  
                 __ptext4 054E                   __ptext5 0521                   __ptext6 050C  
                 __ptext7 0640                   __ptext8 0536          ___aldiv@dividend 0038  
                 _num_arr 0020                   clrloop0 0505                   _voltage 002A  
    end_of_initialization 07FC          ___aldiv@quotient 003E            __end_of___bmul 0536  
          __end_of___lmul 05D8       start_initialization 07F3         ?_ADC_LCD_PIC_init 0070  
           ??_LCD_command 0070        ??_ADC_LCD_PIC_init 0073                  ??___bmul 0078  
                ??___lmul 0078                 ___latbits 0002             __pcstackBANK0 0034  
     __end_of_LCD_command 054E          ___lwdiv@dividend 0072                  ?___aldiv 0034  
                ?___lwdiv 0070          ___lwdiv@quotient 0074           ___aldiv@divisor 0034  
         ___aldiv@counter 003C                  _LCD_data 050C                 clear_ram0 0504  
       ___lmul@multiplier 0070               _LCD_command 0536           ___lwdiv@divisor 0070  
         ___lwdiv@counter 0076                _LCD_output 05D8              ___aldiv@sign 003D  
          LCD_command@hex 0072  
